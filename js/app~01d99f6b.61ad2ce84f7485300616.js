(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{"./locales/en-US.js":function(e,n,t){"use strict";e.exports={page:{"quick-start":"Quick Start",i18n:"Internationalization","custom-theme":"Custom Theme",layout:"Layout",color:"Color",typography:"Typography",icon:"Icon",button:"Button",radio:"Radio",checkbox:"Checkbox",input:"Input","input-number":"Input Number",select:"Select",cascader:"Cascader",switch:"Switch",slider:"Slider","time-picker":"Time Picker","date-picker":"Date Picker","datetime-picker":"DateTime Picker",upload:"Upload",rate:"Rate","color-picker":"ColorPicker",transfer:"Transfer",form:"Form",table:"Table",tag:"Tag",progress:"Progress",tree:"Tree",pagination:"Pagination",badge:"Badge",alert:"Alert",loading:"Loading",message:"Message","message-box":"Message Box",notification:"Notification",menu:"NavMenu",tabs:"Tabs",breadcrumb:"Breadcrumb",dropdown:"Dropdown",steps:"Steps",dialog:"Dialog",tooltip:"Tooltip",popover:"Popover",card:"Card",carousel:"Carousel",collapse:"Collapse"},misc:{guide:"Guide",component:"Component",resource:"Resource",development:"Development",components:"Components",feedback:"Feedback",contribution:"Contribution"},markdown:{show:"Show",hide:"Hide"}}},"./locales/index.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o={"zh-CN":t("./locales/zh-CN.js"),"en-US":t("./locales/en-US.js")};n.default=o;"undefined"!=typeof __REACT_HOT_LOADER__&&__REACT_HOT_LOADER__.register(o,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/locales/index.js")},"./locales/zh-CN.js":function(e,n,t){"use strict";e.exports={page:{"quick-start":"快速上手",i18n:"国际化","custom-theme":"自定义主题",layout:"Layout 布局",color:"Color 色彩",typography:"Typography 字体",icon:"Icon 图标",button:"Button 按钮",radio:"Radio 单选框",checkbox:"Checkbox 多选框",input:"Input 输入框","input-number":"Input Number 计数器",select:"Select 选择器",cascader:"Cascader 级联选择器",switch:"Switch 开关",slider:"Slider 滑块","time-picker":"Time Picker 时间选择器","date-picker":"Date Picker 日期选择器","datetime-picker":"DateTimePicker 日期时间选择器",upload:"Upload 上传",rate:"Rate 评分","color-picker":"ColorPicker 颜色选择器",transfer:"Transfer 穿梭框",form:"Form 表单",table:"Table 表格组件",tag:"Tag 标签",progress:"Progress 进度条",tree:"Tree 树形控件",pagination:"Pagination 分页",badge:"Badge 标记",alert:"Alert 警告",loading:"Loading 加载",message:"Message 消息提示","message-box":"Message Box 弹框",notification:"Notification 通知",menu:"NavMenu 导航菜单",tabs:"Tabs 标签页",breadcrumb:"Breadcrumb 面包屑",dropdown:"Dropdown 下拉菜单",steps:"Steps 步骤",dialog:"Dialog 对话框",tooltip:"Tooltip 文字提示",popover:"Popover 弹出框",card:"Card 卡片",carousel:"Carousel 走马灯",collapse:"Collapse 折叠面板"},misc:{guide:"指南",component:"组件",resource:"资源",development:"开发指南",components:"基础组件",feedback:"反馈建议",contribution:"贡献指南"},markdown:{show:"显示代码",hide:"隐藏代码"}}},"./pages/alert/doc sync recursive ^\\.\\/alert\\..*\\.md$":function(e,n,t){var o={"./alert.en-US.md":"./pages/alert/doc/alert.en-US.md","./alert.zh-CN.md":"./pages/alert/doc/alert.zh-CN.md"};function a(e){var n=l(e);return t(n)}function l(e){var n=o[e];if(n+1)return n;var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(o)},a.resolve=l,(e.exports=a).id="./pages/alert/doc sync recursive ^\\.\\/alert\\..*\\.md$"},"./pages/alert/doc/alert.en-US.md":function(e,n){e.exports='## Alert\n\nDisplays important alert messages.\n\n### Basic usage\n\nAlert components are non-overlay elements in the page that does not disappear automatically.\n\n::: demo Alert provides 4 types of themes defined by `type`, whose default value is `info`.\n```js\nrender() {\n  return (\n    <div>\n      <Alert title="success alert" type="success" />\n      <Alert title="info alert" type="info" />\n      <Alert title="warning alert" type="warning" />\n      <Alert title="error alert" type="error" />\n    </div>\n  )\n}\n```\n:::\n\n### Customizable close button\n\nCustomize the close button as texts or other symbols.\n\n::: demo Alert allows you to configure if it\'s closable. The close button text and closing callbacks are also customizable. `closable` attribute decides if the component can be closed or not. It accepts `boolean`, and the default is `true`. You can set `closeText` attribute to replace the default cross symbol as the close button. Be careful that `closeText` must be a string. `close` event fires when the component is closed.\n\n```js\nrender() {\n  return (\n    <div>\n      <Alert title="unclosable alert" type="success" closable={false} />\n      <Alert title="customized close-text" type="info" closeText="Gotcha" />\n      <Alert title="alert with callback" type="warning" onClose={() => alert(\'Hello World!\')}/>\n    </div>\n  )\n}\n```\n:::\n\n### With icon\n\nDisplaying an icon improves readability.\n\n::: demo Setting the `showIcon` attribute displays an icon that corresponds with the current Alert type.\n\n```js\nrender() {\n  return (\n    <div>\n      <Alert title="success alert" type="success" showIcon={true} />\n      <Alert title="info alert" type="info" showIcon={true} />\n      <Alert title="warning alert" type="warning" showIcon={true} />\n      <Alert title="error alert" type="error" showIcon={true} />\n    </div>\n  )\n}\n```\n:::\n\n### With description\n\nDescription includes a message with more detailed information.\n\n::: demo Besides the required `title` attribute, you can add a `description` attribute to help you describe the alert with more details. Description can only store text string, and it will word wrap automatically.\n\n```js\nrender() {\n  return <Alert title="with description" type="success" description="This is a description." />\n}\n```\n:::\n\n### With icon and description\n\n::: demo At last, this is an example with both icon and description.\n\n```js\nrender() {\n  return (\n    <div>\n      <Alert title="success alert" type="success" description="more text description" showIcon={true} />\n      <Alert title="info alert" type="info" description="more text description" showIcon={true} />\n      <Alert title="warning alert" type="warning" description="more text description" showIcon={true} />\n      <Alert title="error alert" type="error" description="more text description" showIcon={true} />\n    </div>\n  )\n}\n```\n:::\n\n### Attributes\n| Attribute      | Description          | Type      | Accepted Values       | Default  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| **title** | title **REQUIRED** | string | — | — |\n| type | component type | string | success/warning/info/error | info |\n| description | supportive text | string | — | — |\n| closable | if closable or not | boolean | — | true |\n| closeText | customized close button text | string | — | — |\n| showIcon | if a type icon is displayed | boolean | — | false |\n\n\n### Events\n| Event Name | Description | Parameters |\n|---------- |-------- |---------- |\n| onClose | fires when alert is closed | — |\n'},"./pages/alert/doc/alert.zh-CN.md":function(e,n){e.exports='## Alert 警告\n\n用于页面中展示重要的提示信息。\n\n### 基本用法\n\n页面中的非浮层元素，不会自动消失。\n\n::: demo Alert 组件提供四种主题，由`type`属性指定，默认值为`info`。\n```js\nrender() {\n  return (\n    <div>\n      <Alert title="成功提示的文案" type="success" />\n      <Alert title="消息提示的文案" type="info" />\n      <Alert title="警告提示的文案" type="warning" />\n      <Alert title="错误提示的文案" type="error" />\n    </div>\n  )\n}\n```\n:::\n\n### 自定义关闭按钮\n\n自定义关闭按钮为文字或其他符号。\n\n::: demo 在 Alert 组件中，你可以设置是否可关闭，关闭按钮的文本以及关闭时的回调函数。`closable`属性决定是否可关闭，接受`boolean`，默认为`true`。你可以设置`closeText`属性来代替右侧的关闭图标，注意：`closeText`必须为文本。设置`onClose`事件来设置关闭时的回调。\n```js\nrender() {\n  return (\n    <div>\n      <Alert title="不可关闭的 alert" type="success" closable={false} />\n      <Alert title="自定义 close-text" type="info" closeText="知道了" />\n      <Alert title="设置了回调的 alert" type="warning" onClose={() => alert(\'Hello World!\')}/>\n    </div>\n  )\n}\n```\n:::\n\n### 带有 icon\n\n表示某种状态时提升可读性。\n\n::: demo 通过设置`showIcon`属性来显示 Alert 的 icon，这能更有效地向用户展示你的显示意图。\n```js\nrender() {\n  return (\n    <div>\n      <Alert title="成功提示的文案" type="success" showIcon={true} />\n      <Alert title="消息提示的文案" type="info" showIcon={true} />\n      <Alert title="警告提示的文案" type="warning" showIcon={true} />\n      <Alert title="错误提示的文案" type="error" showIcon={true} />\n    </div>\n  )\n}\n```\n:::\n\n### 带有辅助性文字介绍\n\n包含标题和内容，解释更详细的警告。\n\n::: demo 除了必填的`title`属性外，你可以设置`description`属性来帮助你更好地介绍，我们称之为辅助性文字。辅助性文字只能存放单行文本，会自动换行显示。\n```js\nrender() {\n  return (\n    <Alert\n      type="success"\n      title="带辅助性文字介绍"\n      description="这是一句绕口令：黑灰化肥会挥发发灰黑化肥挥发；灰黑化肥会挥发发黑灰化肥发挥。 黑灰化肥会挥发发灰黑化肥黑灰挥发化为灰……" />\n  )\n}\n```\n:::\n\n### 带有 icon 和辅助性文字介绍\n\n::: demo 最后，这是一个同时具有 icon 和辅助性文字的样例。\n```js\nrender() {\n  return (\n    <div>\n      <Alert title="成功提示的文案" type="success" description="文字说明文字说明文字说明文字说明文字说明文字说明"  showIcon={true} />\n      <Alert title="消息提示的文案" type="info" description="文字说明文字说明文字说明文字说明文字说明文字说明" showIcon={true} />\n      <Alert title="警告提示的文案" type="warning" description="文字说明文字说明文字说明文字说明文字说明文字说明" showIcon={true} />\n      <Alert title="错误提示的文案" type="error" description="文字说明文字说明文字说明文字说明文字说明文字说明" showIcon={true} />\n    </div>\n  )\n}\n```\n:::\n\n### Attributes\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| **title** | 标题，**必选参数** | string | — | — |\n| type | 主题 | string | success/warning/info/error | info |\n| description | 辅助性文字 | string | — | — |\n| closable | 是否可关闭 | boolean | — | true |\n| closeText | 关闭按钮自定义文本 | string | — | — |\n| showIcon | 是否显示图标 | boolean | — | false |\n\n\n### Events\n| 事件名称 | 说明 | 回调参数 |\n|---------- |-------- |---------- |\n| onClose | 关闭alert时触发的事件 | — |\n'},"./pages/alert/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=i(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=i(t("../node_modules/babel-runtime/helpers/createClass.js")),l=i(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=i(t("../node_modules/babel-runtime/helpers/inherits.js")),r=i(t("./utils/markdown/index.jsx"));function i(e){return e&&e.__esModule?e:{default:e}}t("./pages/alert/style.scss");var u=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"document",value:function(e){return t("./pages/alert/doc sync recursive ^\\.\\/alert\\..*\\.md$")("./alert."+e+".md")}}]),n}(r.default),d=u;n.default=d;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"Alert","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/alert/index.jsx"),__REACT_HOT_LOADER__.register(d,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/alert/index.jsx"))},"./pages/alert/style.scss":function(e,n,t){},"./pages/app/index.js":function(e,n,o){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=t(o("../node_modules/babel-runtime/helpers/classCallCheck.js")),l=t(o("../node_modules/babel-runtime/helpers/createClass.js")),s=t(o("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),r=t(o("../node_modules/babel-runtime/helpers/inherits.js")),i=t(o("../node_modules/react/index.js")),u=t(o("../node_modules/react-scroll-up/index.js")),d=t(o("../node_modules/classnames/index.js")),c=o("../src/index.js"),p=t(o("../src/locales/lang/en.js")),m=t(o("../src/locales/lang/zh-CN.js")),g=t(o("./locales/index.js")),v=t(o("./pages/index.jsx"));function t(e){return e&&e.__esModule?e:{default:e}}o("../node_modules/url-parse/index.js");var h=function(e){function t(e){(0,a.default)(this,t);var n=(0,s.default)(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={},n}return(0,r.default)(t,e),(0,l.default)(t,[{key:"componentWillMount",value:function(){var e=this;window.addEventListener("hashchange",function(){window.scrollTo(0,0),e.setPage()},!1)}},{key:"componentDidMount",value:function(){var e,n=this,t=location.hash,o=t.indexOf("?");e=0<o&&t.substr(o),this.setState({suffix:e}),this.setPage(function(){n.state.locale||n.setLocale(localStorage.getItem("KO_LANGUAGE")||"zh-CN")})}},{key:"componentDidUpdate",value:function(e,n){if(n.locale!=this.state.locale)switch(this.state.locale){case"en-US":c.i18n.use(p.default);break;default:c.i18n.use(m.default)}}},{key:"getLocale",value:function(e){var o=g.default[this.state.locale]||{};return e.split(".").reduce(function(e,n){var t=o[e];return n?(t||{})[n]:t})}},{key:"setLocale",value:function(e){window.location.hash="/"+e+"/"+this.state.page}},{key:"getPage",value:function(){var e=this,n=location.hash.replace(/\?.*/g,"").match(/(?:\/(.+))?\/(.+)/);return n?(g.default.hasOwnProperty(n[1])&&this.setState({locale:n[1]},function(){localStorage.setItem("KO_LANGUAGE",e.state.locale)}),n[2]):"quick-start"}},{key:"setPage",value:function(e){this.setState({page:this.getPage()},e)}},{key:"getComponent",value:function(e){this.components=this.components||Object.assign(Object.values(v.default.components).reduce(function(e,n){return Object.assign(e,n)},{}),v.default.documents);var n=this.components[e];if(n)return i.default.createElement(n.default,{locale:{show:this.getLocale("markdown.show"),hide:this.getLocale("markdown.hide")}})}},{key:"render",value:function(){var n=this,t=this.state.suffix;return i.default.createElement("div",{className:"app"},t?null:i.default.createElement("header",{className:"header"},i.default.createElement("div",{className:"container"},i.default.createElement("h1",null,i.default.createElement("img",{src:o("./assets/imgs/logo_128.png")})),i.default.createElement("ul",{className:"nav"},i.default.createElement("li",{className:"nav-item"},i.default.createElement("a",{href:"https://github.com/dtux-kangaroo/ko-react.git",target:"_blank",rel:"noopener noreferrer"},"Github")),i.default.createElement("li",{className:"nav-item"},i.default.createElement("a",{className:"active"},this.getLocale("misc.component"))),i.default.createElement("li",{className:"nav-item"},i.default.createElement("a",{href:"https://github.com/dtux-kangaroo/resource",target:"_blank",rel:"noopener noreferrer"},this.getLocale("misc.resource"))),i.default.createElement("li",{className:"nav-item"},i.default.createElement("span",{className:(0,d.default)("nav-lang",{active:"zh-CN"===this.state.locale}),onClick:this.setLocale.bind(this,"zh-CN")},"中文"),i.default.createElement("span",null," / "),i.default.createElement("span",{className:(0,d.default)("nav-lang",{active:"en-US"===this.state.locale}),onClick:this.setLocale.bind(this,"en-US")},"En"))))),i.default.createElement("div",{className:"main container"},i.default.createElement("nav",{className:"side-nav"},i.default.createElement("ul",null,i.default.createElement("li",{className:"nav-item"},i.default.createElement("a",null,this.getLocale("misc.development")),i.default.createElement("ul",{className:"pure-menu-list sub-nav"},Object.keys(v.default.documents).map(function(e){return i.default.createElement("li",{className:"nav-item",key:e},i.default.createElement("a",{href:"#/"+n.state.locale+"/"+e+(t||""),className:e===n.state.page?"active":""},n.getLocale("page."+e)))}))),i.default.createElement("li",{className:"nav-item"},i.default.createElement("a",null,this.getLocale("misc.components")),Object.keys(v.default.components).map(function(e){return i.default.createElement("div",{className:"nav-group",key:e},i.default.createElement("div",{className:"nav-group__title"},e),i.default.createElement("ul",{className:"pure-menu-list"},Object.keys(v.default.components[e]).map(function(e){return i.default.createElement("li",{key:e,className:"nav-item"},i.default.createElement("a",{href:"#/"+n.state.locale+"/"+e+(t||""),className:e===n.state.page?"active":""},n.getLocale("page."+e)))})))})))),i.default.createElement("div",{className:"content"},this.getComponent(this.state.page),i.default.createElement(u.default,{showUnder:360},i.default.createElement("div",{className:"page-component-up"},i.default.createElement("i",{className:"el-icon-caret-top"}))))),t?null:i.default.createElement("footer",{className:"footer"},i.default.createElement("div",{className:"container"},i.default.createElement("div",{className:"footer-main"},i.default.createElement("p",{className:"footer-main-title"},"ko"),i.default.createElement("a",{className:"footer-main-link",target:"_blank",href:"https://www.dtstack.com/"},"袋鼠云--提供技术支持--dtux")))))}}]),t}(i.default.Component),y=h;n.default=y;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(h,"App","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/app/index.js"),__REACT_HOT_LOADER__.register(y,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/app/index.js"))},"./pages/button/doc sync recursive ^\\.\\/button\\..*\\.md$":function(e,n,t){var o={"./button.en-US.md":"./pages/button/doc/button.en-US.md","./button.zh-CN.md":"./pages/button/doc/button.zh-CN.md"};function a(e){var n=l(e);return t(n)}function l(e){var n=o[e];if(n+1)return n;var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(o)},a.resolve=l,(e.exports=a).id="./pages/button/doc sync recursive ^\\.\\/button\\..*\\.md$"},"./pages/button/doc/button.en-US.md":function(e,n){e.exports='## Button\n\nCommonly used button.\n\n### Basic usage\n\n::: demo Button provides 7 themes defined by the `type` attribute.\n\n```js\nrender() {\n  return (\n    <div>\n      <Button>Default Button</Button>\n      <Button type="primary">Primary Button</Button>\n      <Button type="text">Text Button</Button>\n    </div>\n  )\n}\n```\n:::\n\n### Disabled Button\n\nThe `disableds` attribute determines if the button is disabled.\n\n:::demo Use `disabled` attribute to determine whether a button is disabled. It accepts a `Boolean` value.\n\n```js\nrender() {\n  return (\n    <div>\n      <Button plain={true} disabled={true}>Default Button</Button>\n      <Button type="primary" disabled={true}>Primary Button</Button>\n      <Button type="text" disabled={true}>Text Button</Button>\n    </div>\n  )\n}\n```\n:::\n\n### Color Indication\n\nDifferent colors represent different meanings.\n\n:::demo Use `plain` attribute to create a plain button, and it accepts a `Boolean` value. You can assign different `type` to a plain button as mentioned above. **Note**: When using the plain button, you still can set `type` to `text`, but it makes no difference. A plain button will be styled like a `text button` by default.\n```js\nrender() {\n  return (\n    <div className="intro-block">\n      <div className="block">\n        <span className="demonstration">Default</span>\n        <span className="wrapper">\n          <Button type="success">Success</Button>\n          <Button type="warning">Warning</Button>\n          <Button type="danger">Danger</Button>\n          <Button type="info">Info</Button>\n        </span>\n      </div>\n      <div className="block">\n        <span className="demonstration">Hover to display color</span>\n        <span className="wrapper">\n          <Button plain={true} type="success">Success</Button>\n          <Button plain={true} type="warning">Warning</Button>\n          <Button plain={true} type="danger">Danger</Button>\n          <Button plain={true} type="info">Info</Button>\n        </span>\n      </div>\n    </div>\n  )\n}\n```\n:::\n\n### Icon Button\n\nUse icons to add more meaning to Button. You can use icon alone to save some space, or with text together.\n\n:::demo Use the `icon` attribute to add icon. You can find the icon list in Element icon component. Adding icons to the right side of the text is achievable with an `<i>` tag. Custom icons can be used as well.\n\n```js\nrender() {\n  return (\n    <div>\n      <Button type="primary" icon="edit"></Button>\n      <Button type="primary" icon="share"></Button>\n      <Button type="primary" icon="delete"></Button>\n      <Button type="primary" icon="search">Search</Button>\n      <Button type="primary">Upload<i className="el-icon-upload el-icon-right"></i></Button>\n    </div>\n  )\n}\n```\n:::\n\n### Button Group\n\nDisplayed as a button group, can be used to group a series of similar operations.\n\n:::demo Use tag `Button.Group` to group your buttons.\n\n```js\nrender() {\n  return (\n    <div>\n      <Button.Group>\n          <Button type="primary" icon="arrow-left">Previous Page</Button>\n          <Button type="primary">Next Page<i className="el-icon-arrow-right el-icon-right"></i></Button>\n      </Button.Group>\n      <Button.Group>\n          <Button type="primary" icon="edit"></Button>\n          <Button type="primary" icon="share"></Button>\n          <Button type="primary" icon="delete"></Button>\n      </Button.Group>\n    </div>\n  )\n}\n```\n:::\n\n### Loading Button\n\nClick the button to load data, then the button displays a loading state.\n\n:::demo Set `loading` attribute to `true` to display loading state.\n\n```js\nrender() {\n  return <Button type="primary" loading={true}>Loading</Button>\n}\n```\n:::\n\n### Sizes\n\nBesides default size, Button component provides three additional sizes for you to choose among different scenarios.\n\n:::demo Use attribute `size` to set additional sizes with `large`, `small` or `mini`.\n\n```js\nrender() {\n  return (\n    <div>\n      <Button type="primary" size="large">Large Button</Button>\n      <Button type="primary">Default Button</Button>\n      <Button type="primary" size="small">Small Button</Button>\n      <Button type="primary" size="mini">Mini Button</Button>\n    </div>\n  )\n}\n```\n:::\n\n### Attributes\n| Attribute      | Description    | Type      | Accepted values       | Default   |\n|---------- |-------- |---------- |-------------  |-------- |\n| size     | button size   | string  |   large/small/mini            |    —     |\n| type     | button type   | string    |   primary/success/warning/danger/info/text |     —    |\n| plain     | determine whether it\'s a plain button   | Boolean    | — | false   |\n| loading   | determine whether it\'s loading   | Boolean    | — | false   |\n| disabled  | disable the button    | boolean   | —   | false   |\n| icon  | button icon, accepts an icon name of Element icon component | string   |  —  |  —  |\n| nativeType | same as native button\'s `type` | string | button/submit/reset | button |\n'},"./pages/button/doc/button.zh-CN.md":function(e,n){e.exports='## Button 按钮\n常用的操作按钮。\n\n### 基础用法\n\n基础的按钮用法。\n\n:::demo Button 组件默认提供7种主题，由`type`属性来定义，默认为`default`。\n\n```js\nrender() {\n  return (\n    <div>\n      <Button>默认按钮</Button>\n      <Button type="primary">主要按钮</Button>\n      <Button type="text">文字按钮</Button>\n    </div>\n  )\n}\n```\n:::\n\n### 禁用状态\n\n按钮不可用状态。\n\n:::demo 你可以使用`disabled`属性来定义按钮是否可用，它接受一个`Boolean`值。\n\n```js\nrender() {\n  return (\n    <div>\n      <Button plain={true} disabled={true}>默认按钮</Button>\n      <Button type="primary" disabled={true}>主要按钮</Button>\n      <Button type="text" disabled={true}>文字按钮</Button>\n    </div>\n  )\n}\n```\n:::\n\n### 有颜色倾向\n\n不同的颜色倾向代表不同的提示\n\n:::demo 朴素按钮同样设置了不同的`type`属性对应的样式（可选值同上），默认为`info`。设置`plain`属性，它接受一个`Boolean`。注意，在该情况下，`type`虽然可以为`text`，但是是没有意义的，会显示为`text button`的样式。\n\n```js\nrender() {\n  return (\n    <div className="intro-block">\n      <div className="block">\n        <span className="demonstration">默认显示颜色</span>\n        <span className="wrapper">\n          <Button type="success">成功按钮</Button>\n          <Button type="warning">警告按钮</Button>\n          <Button type="danger">危险按钮</Button>\n          <Button type="info">信息按钮</Button>\n        </span>\n      </div>\n      <div className="block">\n        <span className="demonstration">hover 显示颜色</span>\n        <span className="wrapper">\n          <Button plain={true} type="success">成功按钮</Button>\n          <Button plain={true} type="warning">警告按钮</Button>\n          <Button plain={true} type="danger">危险按钮</Button>\n          <Button plain={true} type="info">信息按钮</Button>\n        </span>\n      </div>\n    </div>\n  )\n}\n```\n:::\n\n### 图标按钮\n\n带图标的按钮可增强辨识度(有文字)或节省空间(无文字)。\n\n:::demo 设置`icon`属性即可，icon 的列表可以参考 Element 的 icon 组件，也可以设置在文字右边的 icon ，只要使用`i`标签即可，可以使用自定义图标。\n\n```js\nrender() {\n  return (\n    <div>\n      <Button type="primary" icon="edit"></Button>\n      <Button type="primary" icon="share"></Button>\n      <Button type="primary" icon="delete"></Button>\n      <Button type="primary" icon="search">搜索</Button>\n      <Button type="primary">上传<i className="ko-icon-upload ko-icon-right"></i></Button>\n    </div>\n  )\n}\n```\n:::\n\n### 按钮组\n\n以按钮组的方式出现，常用于多项类似操作。\n\n:::demo 使用`Button.Group`标签来嵌套你的按钮。\n\n```js\nrender() {\n  return (\n    <div>\n      <Button.Group>\n          <Button type="primary" icon="arrow-left">上一页</Button>\n          <Button type="primary">下一页<i className="ko-icon-arrow-right ko-icon-right"></i></Button>\n      </Button.Group>\n      <Button.Group>\n          <Button type="primary" icon="edit"></Button>\n          <Button type="primary" icon="share"></Button>\n          <Button type="primary" icon="delete"></Button>\n      </Button.Group>\n    </div>\n  )\n}\n```\n:::\n\n### 加载中\n\n点击按钮后进行数据加载操作，在按钮上显示加载状态。\n\n:::demo 要设置为 loading 状态，只要设置`loading`属性为`true`即可。\n\n```js\nrender() {\n  return <Button type="primary" loading={true}>加载中</Button>\n}\n```\n:::\n\n### 不同尺寸\n\nButton 组件提供除了默认值以外的三种尺寸，可以在不同场景下选择合适的按钮尺寸。\n\n:::demo 额外的尺寸：`large`、`small`、`mini`，通过设置`size`属性来配置它们。\n\n```js\nrender() {\n  return (\n    <div>\n      <Button type="primary" size="large">大型按钮</Button>\n      <Button type="primary">正常按钮</Button>\n      <Button type="primary" size="small">小型按钮</Button>\n      <Button type="primary" size="mini">超小按钮</Button>\n    </div>\n  )\n}\n```\n:::\n\n### Attributes\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\n|---------- |-------- |---------- |-------------  |-------- |\n| size     | 尺寸   | string  |   large,small,mini            |    —     |\n| type     | 类型   | string    |   primary,success,warning,danger,info,text |     —    |\n| plain     | 是否朴素按钮   | Boolean    | true,false | false   |\n| loading     | 是否加载中状态   | Boolean    | — | false   |\n| disabled  | 禁用    | boolean   | true, false   | false   |\n| icon  | 图标，已有的图标库中的图标名 | string   |  —  |  —  |\n| nativeType | 原生 type 属性 | string | button,submit,reset | button |\n'},"./pages/button/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=i(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=i(t("../node_modules/babel-runtime/helpers/createClass.js")),l=i(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=i(t("../node_modules/babel-runtime/helpers/inherits.js")),r=i(t("./utils/markdown/index.jsx"));function i(e){return e&&e.__esModule?e:{default:e}}t("./pages/button/style.scss");var u=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"document",value:function(e){return console.log(e,"locale"),t("./pages/button/doc sync recursive ^\\.\\/button\\..*\\.md$")("./button."+e+".md")}}]),n}(r.default),d=u;n.default=d;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"Button","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/button/index.jsx"),__REACT_HOT_LOADER__.register(d,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/button/index.jsx"))},"./pages/button/style.scss":function(e,n,t){},"./pages/color/doc sync recursive ^\\.\\/color\\..*\\.md$":function(e,n,t){var o={"./color.en-US.md":"./pages/color/doc/color.en-US.md","./color.zh-CN.md":"./pages/color/doc/color.zh-CN.md"};function a(e){var n=l(e);return t(n)}function l(e){var n=o[e];if(n+1)return n;var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(o)},a.resolve=l,(e.exports=a).id="./pages/color/doc sync recursive ^\\.\\/color\\..*\\.md$"},"./pages/color/doc/color.en-US.md":function(e,n){e.exports='## Color\nElement uses a specific set of palettes to specify colors to provide a consistent look and feel for the products you build.\n\n### Main Color\n\nThe main color of Element is bright and friendly blue.\n\n<div class="demo-color-row">\n  <div class="demo-color-box bg-blue-light">Light Blue<div class="value">#58B7FF</div></div>\n  <div class="demo-color-box bg-blue">Blue<div class="value">#20A0FF</div></div>\n  <div class="demo-color-box bg-blue-dark">Dark Blue<div class="value">#1D8CE0</div></div>\n</div>\n\n### Secondary Color\n\nBesides the main color, you need to use different scene colors in different scenarios (for example, dangerous color indicates dangerous operation)\n\n<div class="demo-color-row">\n  <div class="demo-color-box bg-info">Blue<div class="value">#20A0FF</div></div>\n  <div class="demo-color-box bg-success">Success<div class="value">#13CE66</div></div>\n  <div class="demo-color-box bg-warning">Warning<div class="value">#F7BA2A</div></div>\n  <div class="demo-color-box bg-danger">Danger<div class="value">#FF4949</div></div>\n</div>\n\n### Neutral Color\n\nNeutral colors are for text, background and border colors. You can use different neutral colors to represent the hierarchical structure.\n\n<div class="demo-color-row">\n  <div class="demo-color-box-group">\n    <div class="demo-color-box bg-black">Black<div class="value">#1F2D3D</div></div>\n    <div class="demo-color-box bg-black-light">Light Black<div class="value">#324057</div></div>\n    <div class="demo-color-box bg-black-lighter">Extra Light Black<div class="value">#475669</div></div>\n  </div>\n  <div class="demo-color-box-group">\n    <div class="demo-color-box bg-silver">Silver<div class="value">#8492A6</div></div>\n    <div class="demo-color-box bg-silver-light">Light Silver<div class="value">#99A9BF</div></div>\n    <div class="demo-color-box bg-silver-lighter">Extra Light Silver<div class="value">#C0CCDA</div></div>\n  </div>\n  <div class="demo-color-box-group">\n    <div class="demo-color-box color-gray bg-gray">Gray<div class="value">#D3DCE6</div></div>\n    <div class="demo-color-box color-gray bg-gray-light">Light Gray<div class="value">#E5E9F2</div></div>\n    <div class="demo-color-box color-gray bg-gray-lighter">Extra Light Gray<div class="value">#EFF2F7</div></div>\n  </div>\n  <div class="demo-color-box-group">\n    <div class="demo-color-box color-gray bg-white-dark">Dark White<div class="value">#F9FAFC</div></div>\n    <div class="demo-color-box color-gray bg-white">White<div class="value">#FFFFFF</div></div>\n  </div>\n</div>\n'},"./pages/color/doc/color.zh-CN.md":function(e,n){e.exports='## Color 色彩\n\nElement 为了避免视觉传达差异，使用一套特定的调色板来规定颜色，为你所搭建的产品提供一致的外观视觉感受。\n\n### 主色\n\nElement 主要品牌颜色是鲜艳、友好的蓝色。\n\n<div class="demo-color-row">\n  <div class="demo-color-box bg-blue-light">Light Blue<div class="value">#58B7FF</div></div>\n  <div class="demo-color-box bg-blue">Blue<div class="value">#20A0FF</div></div>\n  <div class="demo-color-box bg-blue-dark">Dark Blue<div class="value">#1D8CE0</div></div>\n</div>\n\n### 辅助色\n\n除了主色外的场景色，需要在不同的场景中使用（例如危险色表示危险的操作）。\n\n<div class="demo-color-row">\n  <div class="demo-color-box bg-info">Blue<div class="value">#20A0FF</div></div>\n  <div class="demo-color-box bg-success">Success<div class="value">#13CE66</div></div>\n  <div class="demo-color-box bg-warning">Warning<div class="value">#F7BA2A</div></div>\n  <div class="demo-color-box bg-danger">Danger<div class="value">#FF4949</div></div>\n</div>\n\n### 中性色\n\n中性色用于文本、背景和边框颜色。通过运用不同的中性色，来表现层次结构。\n\n<div class="demo-color-row">\n  <div class="demo-color-box-group">\n    <div class="demo-color-box bg-black">Black<div class="value">#1F2D3D</div></div>\n    <div class="demo-color-box bg-black-light">Light Black<div class="value">#324057</div></div>\n    <div class="demo-color-box bg-black-lighter">Extra Light Black<div class="value">#475669</div></div>\n  </div>\n  <div class="demo-color-box-group">\n    <div class="demo-color-box bg-silver">Silver<div class="value">#8492A6</div></div>\n    <div class="demo-color-box bg-silver-light">Light Silver<div class="value">#99A9BF</div></div>\n    <div class="demo-color-box bg-silver-lighter">Extra Light Silver<div class="value">#C0CCDA</div></div>\n  </div>\n  <div class="demo-color-box-group">\n    <div class="demo-color-box color-gray bg-gray">Gray<div class="value">#D3DCE6</div></div>\n    <div class="demo-color-box color-gray bg-gray-light">Light Gray<div class="value">#E5E9F2</div></div>\n    <div class="demo-color-box color-gray bg-gray-lighter">Extra Light Gray<div class="value">#EFF2F7</div></div>\n  </div>\n  <div class="demo-color-box-group">\n    <div class="demo-color-box color-gray bg-white-dark">Dark White<div class="value">#F9FAFC</div></div>\n    <div class="demo-color-box color-gray bg-white">White<div class="value">#FFFFFF</div></div>\n  </div>\n</div>\n'},"./pages/color/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=i(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=i(t("../node_modules/babel-runtime/helpers/createClass.js")),l=i(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=i(t("../node_modules/babel-runtime/helpers/inherits.js")),r=i(t("./utils/markdown/index.jsx"));function i(e){return e&&e.__esModule?e:{default:e}}t("./pages/color/style.scss");var u=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"document",value:function(e){return t("./pages/color/doc sync recursive ^\\.\\/color\\..*\\.md$")("./color."+e+".md")}}]),n}(r.default),d=u;n.default=d;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"Color","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/color/index.jsx"),__REACT_HOT_LOADER__.register(d,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/color/index.jsx"))},"./pages/color/style.scss":function(e,n,t){},"./pages/custom-theme/doc sync recursive ^\\.\\/custom\\-theme\\..*\\.md$":function(e,n,t){var o={"./custom-theme.en-US.md":"./pages/custom-theme/doc/custom-theme.en-US.md","./custom-theme.zh-CN.md":"./pages/custom-theme/doc/custom-theme.zh-CN.md"};function a(e){var n=l(e);return t(n)}function l(e){var n=o[e];if(n+1)return n;var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(o)},a.resolve=l,(e.exports=a).id="./pages/custom-theme/doc sync recursive ^\\.\\/custom\\-theme\\..*\\.md$"},"./pages/custom-theme/doc/custom-theme.en-US.md":function(e,n){e.exports="## Installation\n\n### Custom theme\nElement uses BEM-styled CSS so that you can override styles easily.\n\n### Update SCSS variables in your project\n`ko-theme` is written in SCSS. If your project also uses SCSS, you can directly change Element style variables. Create a new style file, e.g. `ko-variables.scss`:\n\n```html\n/* theme color */\n$--color-primary: teal;\n\n/* icon font path, required */\n$--font-path: '~ko-theme/src/fonts';\n\n@import \"~ko-theme/src/index\";\n```\n\nThen in the entry file of your project, import this style file instead of Element's built CSS:\n```JS\nimport React from 'React'\nimport { Button} from 'ko-rt'\n\nimport 'ko-theme';\n\nReactDOM.render(<Button type=\"primary\">Hello</Button>, document.getElementById('app'));\n```\n:::tip\nNote that it is required to override icon font path to the relative path of Element's font files.\n:::\n\nIn `element-variables.scss` you can find all the variables we used to style Element and they are defined in SCSS format. Here's a snippet:\n```css\n$--color-primary: #409EFF !default;\n$--color-primary-light-1: mix($--color-white, $--color-primary, 10%) !default; /* 53a8ff */\n$--color-primary-light-2: mix($--color-white, $--color-primary, 20%) !default; /* 66b1ff */\n$--color-primary-light-3: mix($--color-white, $--color-primary, 30%) !default; /* 79bbff */\n$--color-primary-light-4: mix($--color-white, $--color-primary, 40%) !default; /* 8cc5ff */\n$--color-primary-light-5: mix($--color-white, $--color-primary, 50%) !default; /* a0cfff */\n$--color-primary-light-6: mix($--color-white, $--color-primary, 60%) !default; /* b3d8ff */\n$--color-primary-light-7: mix($--color-white, $--color-primary, 70%) !default; /* c6e2ff */\n$--color-primary-light-8: mix($--color-white, $--color-primary, 80%) !default; /* d9ecff */\n$--color-primary-light-9: mix($--color-white, $--color-primary, 90%) !default; /* ecf5ff */\n\n$--color-success: #67c23a !default;\n$--color-warning: #e6a23c !default;\n$--color-danger: #f56c6c !default;\n$--color-info: #909399 !default;\n\n...\n```\n\n\nplease refer to <a href=\"./#/zh-CN/quick-start\">Quick Start</a>. For more details, check out the [project repository](https://github.com/ElementUI/element-theme) of `ko-theme`."},"./pages/custom-theme/doc/custom-theme.zh-CN.md":function(e,n){e.exports="\n##   安装主题\n\n```html\nnpm install ko-theme --save\n\n```\n### 自定义主题\nko 默认提供一套主题，CSS 命名采用 BEM 的风格，方便使用者覆盖样式。可以进行不同程度的样式自定义。\n### 在项目中改变 SCSS 变量\nko 的 ko-theme 使用 SCSS 编写，如果你的项目也使用了 SCSS，那么可以直接在项目中改变 ko 的样式变量。新建一个样式文件，例如 `ko-variables.scss`，写入以下内容：\n```html\n/* 改变主题色变量 */\n$--color-primary: teal;\n\n/* 改变 icon 字体路径变量，必需 */\n$--font-path: '~ko-theme/src/fonts';\n\n@import \"~ko-theme/src/index\";\n```\n\n之后，在项目的入口文件中，直接引入以上样式文件即可（无需引入 ko 编译好的 CSS 文件）：\n```JS\nimport React from 'React'\nimport { Button } from 'ko-rt'\n\nimport 'ko-theme';\n\nReactDOM.render(<Button type=\"primary\">Hello</Button>, document.getElementById('app'));\n```\n\n:::tip\n需要注意的是，覆盖字体路径变量是必需的，将其赋值为 KO 中 icon 图标所在的相对路径即可。\n:::\n\n\n```css\n$--color-primary: #409EFF !default;\n$--color-primary-light-1: mix($--color-white, $--color-primary, 10%) !default; /* 53a8ff */\n$--color-primary-light-2: mix($--color-white, $--color-primary, 20%) !default; /* 66b1ff */\n$--color-primary-light-3: mix($--color-white, $--color-primary, 30%) !default; /* 79bbff */\n$--color-primary-light-4: mix($--color-white, $--color-primary, 40%) !default; /* 8cc5ff */\n$--color-primary-light-5: mix($--color-white, $--color-primary, 50%) !default; /* a0cfff */\n$--color-primary-light-6: mix($--color-white, $--color-primary, 60%) !default; /* b3d8ff */\n$--color-primary-light-7: mix($--color-white, $--color-primary, 70%) !default; /* c6e2ff */\n$--color-primary-light-8: mix($--color-white, $--color-primary, 80%) !default; /* d9ecff */\n$--color-primary-light-9: mix($--color-white, $--color-primary, 90%) !default; /* ecf5ff */\n\n$--color-success: #67c23a !default;\n$--color-warning: #e6a23c !default;\n$--color-danger: #f56c6c !default;\n$--color-info: #909399 !default;\n\n...\n```\n\n如果不清楚 请阅读 <a href=\"./#/zh-CN/quick-start\">快速上手</a> 一节。更多 `ko-theme` 用法请参考[项目仓库](https://github.com/dtux-kangaroo/ko.git)。"},"./pages/custom-theme/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=i(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=i(t("../node_modules/babel-runtime/helpers/createClass.js")),l=i(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=i(t("../node_modules/babel-runtime/helpers/inherits.js")),r=i(t("./utils/markdown/index.jsx"));function i(e){return e&&e.__esModule?e:{default:e}}t("./pages/custom-theme/style.scss");var u=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"document",value:function(e){return t("./pages/custom-theme/doc sync recursive ^\\.\\/custom\\-theme\\..*\\.md$")("./custom-theme."+e+".md")}}]),n}(r.default),d=u;n.default=d;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"CustomTheme","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/custom-theme/index.jsx"),__REACT_HOT_LOADER__.register(d,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/custom-theme/index.jsx"))},"./pages/custom-theme/style.scss":function(e,n,t){},"./pages/dialog/doc sync recursive ^\\.\\/dialog\\..*\\.md$":function(e,n,t){var o={"./dialog.en-US.md":"./pages/dialog/doc/dialog.en-US.md","./dialog.zh-CN.md":"./pages/dialog/doc/dialog.zh-CN.md"};function a(e){var n=l(e);return t(n)}function l(e){var n=o[e];if(n+1)return n;var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(o)},a.resolve=l,(e.exports=a).id="./pages/dialog/doc sync recursive ^\\.\\/dialog\\..*\\.md$"},"./pages/dialog/doc/dialog.en-US.md":function(e,n){e.exports='## Dialog\n\nInforms users while preserving the current page state.\n\n### Basic usage\n\nDialog pops up a dialog box, and it\'s quite customizable.\n\n:::demo Set the `visible` attribute with a `Boolean`, and Dialog shows when it is `true`. The Dialog has two parts: `Dialog.Body` and `Dialog.Footer`. The optional `title` attribute (empty by default) is for defining a title.\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    dialogVisible: false\n  };\n}\n\nrender() {\n  return (\n    <div>\n      <Button type="text" onClick={ () => this.setState({ dialogVisible: true }) }>Click to open the Dialog</Button>\n      <Dialog\n        title="Tips"\n        size="tiny"\n        visible={ this.state.dialogVisible }\n        onCancel={ () => this.setState({ dialogVisible: false }) }\n        lockScroll={ false }\n      >\n        <Dialog.Body>\n          <span>This is a message</span>\n        </Dialog.Body>\n        <Dialog.Footer className="dialog-footer">\n          <Button onClick={ () => this.setState({ dialogVisible: false }) }>Cancel</Button>\n          <Button type="primary" onClick={ () => this.setState({ dialogVisible: false }) }>Confirm</Button>\n        </Dialog.Footer>\n      </Dialog>\n    </div>\n  )\n}\n```\n:::\n\n### Customizations\n\nThe content of Dialog can be anything, even a table or a form. This example shows how to use Element Table and Form with Dialog。\n\n:::demo\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    dialogVisible2: false,\n    dialogVisible3: false,\n    form: {\n      name: \'\',\n      region: \'\'\n    }\n  };\n\n  this.table = {\n    columns: [\n      {\n        label: "Date",\n        prop: "date",\n        width: 150\n      },\n      {\n        label: "Name",\n        prop: "name",\n        width: 100\n      },\n      {\n        label: "Address",\n        prop: "address"\n      }\n    ],\n    data: [{\n      date: \'2016-05-02\',\n      name: \'John Smith\',\n      address: \'No.1518,  Jinshajiang Road, Putuo District\'\n    }, {\n      date: \'2016-05-04\',\n      name: \'John Smith\',\n      address: \'No.1518,  Jinshajiang Road, Putuo District\'\n    }, {\n      date: \'2016-05-01\',\n      name: \'John Smith\',\n      address: \'No.1518,  Jinshajiang Road, Putuo District\'\n    }, {\n      date: \'2016-05-03\',\n      name: \'John Smith\',\n      address: \'No.1518,  Jinshajiang Road, Putuo District\'\n    }]\n  };\n}\n\nrender() {\n  return (\n    <div>\n      <Button type="text" onClick={ () => this.setState({ dialogVisible2: true }) } type="text">Open a Table nested Dialog</Button>\n      <Dialog\n        title="Shipping Address"\n        visible={ this.state.dialogVisible2 }\n        onCancel={ () => this.setState({ dialogVisible2: false }) }\n      >\n        <Dialog.Body>\n        //   {this.state.dialogVisible2 && (\n        //     <Table\n        //      style={{width: \'100%\'}}\n        //      stripe={true}\n        //      columns={this.table.columns}\n        //      data={this.table.data} />\n        //   )}\n        </Dialog.Body>\n      </Dialog>\n      <Button type="text" onClick={ () => this.setState({ dialogVisible3: true }) } type="text">Open a Form nested Dialog</Button>\n      <Dialog\n        title="Shipping Address"\n        visible={ this.state.dialogVisible3 }\n        onCancel={ () => this.setState({ dialogVisible3: false }) }\n      >\n        <Dialog.Body>\n        //   <Form model={this.state.form}>\n        //     <Form.Item label="Promotion name" labelWidth="120">\n        //       <Input value={this.state.form.name}></Input>\n        //     </Form.Item>\n        //     <Form.Item label="Zones" labelWidth="120">\n        //       <Select value={this.state.form.region} placeholder="Please select a zone">\n        //         <Select.Option label="Zone No.1" value="shanghai"></Select.Option>\n        //         <Select.Option label="Zone No.2" value="beijing"></Select.Option>\n        //       </Select>\n        //     </Form.Item>\n        //   </Form>\n        </Dialog.Body>\n\n        <Dialog.Footer className="dialog-footer">\n          <Button onClick={ () => this.setState({ dialogVisible3: false }) }>取 消</Button>\n          <Button type="primary" onClick={ () => this.setState({ dialogVisible3: false }) }>确 定</Button>\n        </Dialog.Footer>\n      </Dialog>\n    </div>\n  )\n}\n```\n:::\n\n### Attributes\n\n| Attribute      | Description          | Type      | Accepted Values       | Default  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| title     | title of Dialog. Can also be passed with a named slot (see the following table) | string    | — | — |\n| size      | size of Dialog | string    | tiny/small/large/full | small |\n| top      | value for `top` of Dialog CSS, works when `size` is not `full` | string    | — | 15% |\n| modal     | whether a mask is displayed | boolean   | — | true |\n| modalAppendToBody     | whether to append modal to body element. If false, the modal will be appended to Dialog\'s parent element | boolean   | — | true |\n| lockScroll     | whether scroll of body is disabled while Dialog is displayed | boolean   | — | true |\n| customClass      | custom class names for Dialog | string    | — | — |\n| closeOnClickModal | whether the Dialog can be closed by clicking the mask | boolean    | — | true |\n| closeOnPressEscape | whether the Dialog can be closed by pressing ESC | boolean    | — | true |\n| showClose | whether to show a close button | boolean    | — | true |\n\n### Events\n| Event Name | Description | Parameters |\n|---------- |-------- |---------- |\n| onOpen | triggers when the Dialog opens | — |\n| onClose | triggers when the Dialog closes | — |\n'},"./pages/dialog/doc/dialog.zh-CN.md":function(e,n){e.exports='## Dialog 对话框\n在保留当前页面状态的情况下，告知用户并承载相关操作。\n\n### 基本用法\n\nDialog 弹出一个对话框，适合需要定制性更大的场景。\n\n:::demo 需要设置`visible`属性，它接收`Boolean`，当为`true`时显示 Dialog。Dialog 分为两个部分：`Dialog.Body`和`Dialog.Footer`。`title`属性用于定义标题，它是可选的，默认值为空。\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    dialogVisible: false\n  };\n}\n\nrender() {\n  return (\n    <div>\n      <Button type="text" onClick={ () => this.setState({ dialogVisible: true }) }>点击打开 Dialog</Button>\n      <Dialog\n        title="提示"\n        size="tiny"\n        visible={ this.state.dialogVisible }\n        onCancel={ () => this.setState({ dialogVisible: false }) }\n        lockScroll={ false }\n      >\n        <Dialog.Body>\n          <span>这是一段信息</span>\n        </Dialog.Body>\n        <Dialog.Footer className="dialog-footer">\n          <Button onClick={ () => this.setState({ dialogVisible: false }) }>取消</Button>\n          <Button type="primary" onClick={ () => this.setState({ dialogVisible: false }) }>确定</Button>\n        </Dialog.Footer>\n      </Dialog>\n    </div>\n  )\n}\n```\n:::\n\n### 自定义内容\n\nDialog 组件的内容可以是任意的，甚至可以是表格或表单，下面是应用了 Element Table 和 Form 组件的两个样例。\n\n:::demo\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    dialogVisible2: false,\n    dialogVisible3: false,\n    form: {\n      name: \'\',\n      region: \'\'\n    }\n  };\n\n  this.table = {\n    columns: [\n      {\n        label: "日期",\n        prop: "date",\n        width: 150\n      },\n      {\n        label: "姓名",\n        prop: "name",\n        width: 100\n      },\n      {\n        label: "地址",\n        prop: "address"\n      }\n    ],\n    data: [{\n      date: \'2016-05-02\',\n      name: \'王小虎\',\n      address: \'上海市普陀区金沙江路 1518 弄\'\n    }, {\n      date: \'2016-05-04\',\n      name: \'王小虎\',\n      address: \'上海市普陀区金沙江路 1517 弄\'\n    }, {\n      date: \'2016-05-01\',\n      name: \'王小虎\',\n      address: \'上海市普陀区金沙江路 1519 弄\'\n    }, {\n      date: \'2016-05-03\',\n      name: \'王小虎\',\n      address: \'上海市普陀区金沙江路 1516 弄\'\n    }]\n  };\n}\n\nrender() {\n  return (\n    <div>\n      <Button type="text" onClick={ () => this.setState({ dialogVisible2: true }) } type="text">打开嵌套表格的 Dialog</Button>\n      <Dialog\n        title="收货地址"\n        visible={ this.state.dialogVisible2 }\n        onCancel={ () => this.setState({ dialogVisible2: false }) }\n      >\n        <Dialog.Body>\n            <div className="dialog-form"> 表格--待添加</div>\n        </Dialog.Body>\n      </Dialog>\n      <Button type="text" onClick={ () => this.setState({ dialogVisible3: true }) } type="text">打开嵌套表单的 Dialog</Button>\n      <Dialog\n        title="收货地址"\n        visible={ this.state.dialogVisible3 }\n        onCancel={ () => this.setState({ dialogVisible3: false }) }\n      >\n        <Dialog.Body>\n           <div className="dialog-form"> 表单--待添加</div>\n        </Dialog.Body>\n\n        <Dialog.Footer className="dialog-footer">\n          <Button onClick={ () => this.setState({ dialogVisible3: false }) }>取 消</Button>\n          <Button type="primary" onClick={ () => this.setState({ dialogVisible3: false }) }>确 定</Button>\n        </Dialog.Footer>\n      </Dialog>\n    </div>\n  )\n}\n```\n:::\n\n### Attributes\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| title     | Dialog 的标题 | string    | —                               | —      |\n| size      | Dialog 的大小 | string    | tiny/small/large/full | small |\n| top       | Dialog CSS 中的 top 值（仅在 size 不为 full 时有效） | string    | —                       | 15%     |\n| modal     | 是否需要遮罩层   | boolean   | — | true |\n| lockScroll | 是否在 Dialog 出现时将 body 滚动锁定 | boolean | — | true |\n| customClass      | Dialog 的自定义类名 | string    | — | — |\n| closeOnClickModal | 是否可以通过点击 modal 关闭 Dialog | boolean    | — | true |\n| closeOnPressEscape | 是否可以通过按下 ESC 关闭 Dialog | boolean    | — | true |\n\n### Events\n| 事件名称      | 说明    | 回调参数      |\n|---------- |-------- |---------- |\n| onClose  | Dialog 关闭的回调 | — |\n| onOpen  | Dialog 打开的回调 | — |\n'},"./pages/dialog/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=i(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=i(t("../node_modules/babel-runtime/helpers/createClass.js")),l=i(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=i(t("../node_modules/babel-runtime/helpers/inherits.js")),r=i(t("./utils/markdown/index.jsx"));function i(e){return e&&e.__esModule?e:{default:e}}t("./pages/dialog/style.scss");var u=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"document",value:function(e){return t("./pages/dialog/doc sync recursive ^\\.\\/dialog\\..*\\.md$")("./dialog."+e+".md")}}]),n}(r.default),d=u;n.default=d;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"Dialog","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/dialog/index.jsx"),__REACT_HOT_LOADER__.register(d,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/dialog/index.jsx"))},"./pages/dialog/style.scss":function(e,n,t){},"./pages/i18n/doc sync recursive ^\\.\\/i18n\\..*\\.md$":function(e,n,t){var o={"./i18n.en-US.md":"./pages/i18n/doc/i18n.en-US.md","./i18n.zh-CN.md":"./pages/i18n/doc/i18n.zh-CN.md"};function a(e){var n=l(e);return t(n)}function l(e){var n=o[e];if(n+1)return n;var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(o)},a.resolve=l,(e.exports=a).id="./pages/i18n/doc sync recursive ^\\.\\/i18n\\..*\\.md$"},"./pages/i18n/doc/i18n.en-US.md":function(e,n){e.exports="## 国际化\n\nElement 组件内部默认使用中文，若希望使用其他语言，则需要进行多语言设置。以英文为例，在 main.js 中：\n\n```javascript\nimport { i18n } from 'ko-rt'\nimport locale from 'ko-rt/src/locale/lang/en'\n\ni18n.use(locale);\n```\n\n如果使用其它语言，默认情况下中文语言包依旧是被引入的，可以使用 webpack 的 NormalModuleReplacementPlugin 替换默认语言包。\n\n**webpack.config.js**\n```javascript\n{\n  plugins: [\n    new webpack.NormalModuleReplacementPlugin(/ko-rt[\\/\\\\]src[\\/\\\\]locale[\\/\\\\]lang[\\/\\\\]zh-CN/, 'ko-rt/src/locale/lang/en')\n  ]\n}\n```\n\n目前 ko 内置了以下语言：\n<ul class=\"language-list\">\n  <li>简体中文（zh-CN）</li>\n  <li>英语（en）</li>\n</ul>\n\n如果你需要使用其他的语言，欢迎贡献 PR：请参考 [这里]((https://github.com/dtux-kangaroo/ko.git)。) "},"./pages/i18n/doc/i18n.zh-CN.md":function(e,n){e.exports="## 国际化\n\nElement 组件内部默认使用中文，若希望使用其他语言，则需要进行多语言设置。以英文为例，在 main.js 中：\n\n```javascript\nimport { i18n } from 'ko-rt'\nimport locale from 'ko-rt/src/locale/lang/en'\n\ni18n.use(locale);\n```\n\n如果使用其它语言，默认情况下中文语言包依旧是被引入的，可以使用 webpack 的 NormalModuleReplacementPlugin 替换默认语言包。\n\n**webpack.config.js**\n```javascript\n{\n  plugins: [\n    new webpack.NormalModuleReplacementPlugin(/ko-rt[\\/\\\\]src[\\/\\\\]locale[\\/\\\\]lang[\\/\\\\]zh-CN/, 'ko-tr/src/locale/lang/en')\n  ]\n}\n```\n\n目前 ko 内置了以下语言：\n<ul class=\"language-list\">\n  <li>简体中文（zh-CN）</li>\n  <li>英语（en）</li>\n</ul>\n\n如果你需要使用其他的语言，欢迎贡献 PR：请参考 [这里](https://github.com/dtux-kangaroo/ko.git)。\n"},"./pages/i18n/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=i(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=i(t("../node_modules/babel-runtime/helpers/createClass.js")),l=i(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=i(t("../node_modules/babel-runtime/helpers/inherits.js")),r=i(t("./utils/markdown/index.jsx"));function i(e){return e&&e.__esModule?e:{default:e}}t("./pages/i18n/style.scss");var u=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"document",value:function(e){return t("./pages/i18n/doc sync recursive ^\\.\\/i18n\\..*\\.md$")("./i18n."+e+".md")}}]),n}(r.default),d=u;n.default=d;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"i18n","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/i18n/index.jsx"),__REACT_HOT_LOADER__.register(d,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/i18n/index.jsx"))},"./pages/i18n/style.scss":function(e,n,t){},"./pages/icon/doc sync recursive ^\\.\\/icon\\..*\\.md$":function(e,n,t){var o={"./icon.en-US.md":"./pages/icon/doc/icon.en-US.md","./icon.zh-CN.md":"./pages/icon/doc/icon.zh-CN.md"};function a(e){var n=l(e);return t(n)}function l(e){var n=o[e];if(n+1)return n;var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(o)},a.resolve=l,(e.exports=a).id="./pages/icon/doc sync recursive ^\\.\\/icon\\..*\\.md$"},"./pages/icon/doc/icon.en-US.md":function(e,n){e.exports='## Icon\n\nElement provides a set of common icons.\n\n### Basic usage\n\nJust assign the class name to `ko-icon-iconName`.\n\n:::demo\n\n```js\nrender() {\n  return (\n    <div>\n      <i className="ko-icon-edit"></i>\n      <i className="ko-icon-share"></i>\n      <i className="ko-icon-delete"></i>\n      <Button type="primary" icon="search">Search</Button>\n    </div>\n  )\n}\n```\n:::\n\n### Icons\n\n:::demo\n```js\nrender() {\n  return (\n    <ul className="icon-list">\n      {this.props.iconList.map((v, i) =>\n        <li key={i}><span><Icon name={v} />{v}</span></li>\n      )}\n    </ul>\n  )\n}\n```\n:::\n'},"./pages/icon/doc/icon.zh-CN.md":function(e,n){e.exports='## Icon 图标\n\n提供了一套常用的图标集合。\n\n### 使用方法\n\n直接通过设置类名为 `ko-icon-iconName` 来使用即可。例如：\n\n:::demo\n```js\nrender() {\n  return (\n    <div>\n      <i className="ko-icon-edit"></i>\n      <i className="ko-icon-share"></i>\n      <i className="ko-icon-delete"></i>\n      <Button type="primary" icon="search">搜索</Button>\n    </div>\n  )\n}\n```\n:::\n\n### 图标集合\n\n:::demo\n```js\nrender() {\n  return (\n    <ul className="icon-list">\n      {this.props.iconList.map((v, i) =>\n        <li key={i}><span><Icon name={v} />{v}</span></li>\n      )}\n    </ul>\n  )\n}\n```\n:::\n'},"./pages/icon/iconList.js":function(e,n,t){"use strict";e.exports=["arrow-down","arrow-left","arrow-right","arrow-up","caret-bottom","caret-left","caret-right","caret-top","check","circle-check","circle-close","close","upload","d-arrow-left","d-arrow-right","d-caret","date","delete","document","edit","information","loading","menu","message","minus","more","picture","plus","search","setting","share","star-off","star-on","time","warning","delete2","upload2","view"]},"./pages/icon/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=i(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=i(t("../node_modules/babel-runtime/helpers/createClass.js")),l=i(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=i(t("../node_modules/babel-runtime/helpers/inherits.js")),r=i(t("./utils/markdown/index.jsx"));function i(e){return e&&e.__esModule?e:{default:e}}t("./pages/icon/style.scss");var u=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"document",value:function(e){return t("./pages/icon/doc sync recursive ^\\.\\/icon\\..*\\.md$")("./icon."+e+".md")}}]),n}(r.default),d=u;n.default=d,u.defaultProps={iconList:t("./pages/icon/iconList.js")};"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"Icon","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/icon/index.jsx"),__REACT_HOT_LOADER__.register(d,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/icon/index.jsx"))},"./pages/icon/style.scss":function(e,n,t){},"./pages/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o={documents:{"quick-start":t("./pages/quick-start/index.jsx"),i18n:t("./pages/i18n/index.jsx"),"custom-theme":t("./pages/custom-theme/index.jsx")},components:{Basic:{layout:t("./pages/layout/index.jsx"),color:t("./pages/color/index.jsx"),typography:t("./pages/typography/index.jsx"),icon:t("./pages/icon/index.jsx"),button:t("./pages/button/index.jsx")},DataEntry:{select:t("./pages/select/index.jsx")},Feedback:{alert:t("./pages/alert/index.jsx"),dialog:t("./pages/dialog/index.jsx"),loading:t("./pages/loading/index.jsx")}}};n.default=o;"undefined"!=typeof __REACT_HOT_LOADER__&&__REACT_HOT_LOADER__.register(o,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/index.jsx")},"./pages/layout/doc sync recursive ^\\.\\/layout\\..*\\.md$":function(e,n,t){var o={"./layout.en-US.md":"./pages/layout/doc/layout.en-US.md","./layout.zh-CN.md":"./pages/layout/doc/layout.zh-CN.md"};function a(e){var n=l(e);return t(n)}function l(e){var n=o[e];if(n+1)return n;var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(o)},a.resolve=l,(e.exports=a).id="./pages/layout/doc sync recursive ^\\.\\/layout\\..*\\.md$"},"./pages/layout/doc/layout.en-US.md":function(e,n){e.exports='## Layout\n\nQuickly and easily create layouts with the basic 24-column.\n\n### Basic layout\n\nCreate basic grid layout using columns.\n\n::: demo With `row` and `col`, we can easily manipulate the layout using the `span` attribute.\n```js\nrender() {\n  return (\n    <div>\n      <Layout.Row>\n        <Layout.Col span="24"><div className="grid-content bg-purple-dark"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row>\n        <Layout.Col span="12"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="12"><div className="grid-content bg-purple-light"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row>\n        <Layout.Col span="8"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="8"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="8"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row>\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row>\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple-light"></div></Layout.Col>\n      </Layout.Row>\n    </div>\n  )\n}\n```\n:::\n\n### Column spacing\n\nColumn spacing is supported.\n\n::: demo Row provides `gutter` attribute to specify spacings between columns, and its default value is 0.\n```js\nrender() {\n  return (\n    <Layout.Row gutter="20">\n      <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n    </Layout.Row>\n  )\n}\n```\n:::\n\n### Hybrid layout\n\nForm a more complex hybrid layout by combining the basic 1/24 columns.\n\n::: demo\n```js\nrender() {\n  return (\n    <div>\n      <Layout.Row gutter="20">\n        <Layout.Col span="16"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="8"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row gutter="20">\n        <Layout.Col span="8"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="8"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row gutter="20">\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="16"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n    </div>\n  )\n}\n```\n:::\n\n### Column offset\n\nYou can specify column offsets.\n\n::: demo You can specify the number of column offset by setting the value of `offset` attribute of Col.\n\n```js\nrender() {\n  return (\n    <div>\n      <Layout.Row gutter="20">\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6" offset="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row gutter="20">\n        <Layout.Col span="6" offset="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6" offset="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row gutter="20">\n        <Layout.Col span="12" offset="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n    </div>\n  )\n}\n```\n:::\n\n### Alignment\n\nUse the flex layout to make flexible alignment of columns.\n\n::: demo You can enable flex layout by setting `type` attribute to \'flex\', and define the layout of child elements by setting `justify` attribute with start, center, end, space-between or space-around.\n```js\nrender() {\n  return (\n    <div>\n      <Layout.Row type="flex" className="row-bg">\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row type="flex" className="row-bg" justify="center">\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row type="flex" className="row-bg" justify="end">\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row type="flex" className="row-bg" justify="space-between">\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row type="flex" className="row-bg" justify="space-around">\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span={6}><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n    </div>\n  )\n}\n```\n:::\n\n### Responsive Layout\n\nTaking example by Bootstrap\'s responsive design, four breakpoints are preset: xs, sm, md and lg.\n\n::: demo\n```js\nrender() {\n  return (\n    <Layout.Row gutter="10">\n      <Layout.Col xs="8" sm="6" md="4" lg="3"><div className="grid-content bg-purple"></div></Layout.Col>\n      <Layout.Col xs="4" sm="6" md="8" lg="9"><div className="grid-content bg-purple-light"></div></Layout.Col>\n      <Layout.Col xs="4" sm="6" md="8" lg="9"><div className="grid-content bg-purple"></div></Layout.Col>\n      <Layout.Col xs="8" sm="6" md="4" lg="3"><div className="grid-content bg-purple-light"></div></Layout.Col>\n    </Layout.Row>\n  )\n}\n```\n:::\n\n### Row Attributes\n| Attribute      | Description          | Type      | Accepted Values       | Default  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| gutter | grid spacing | number | — | 0 |\n| type | layout mode, you can use flex, works in modern browsers | string | — | — |\n| justify | horizontal alignment of flex layout | string | start/end/center/space-around/space-between | start |\n| align | vertical alignment of flex layout | string | top/middle/bottom | top |\n| tag | custom element tag | string | * | div |\n\n### Col Attributes\n| Attribute      | Description          | Type      | Accepted Values       | Default  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| span | number of column the grid spans | number | — | — |\n| offset | number of spacing on the left side of the grid | number | — | 0 |\n| push |  number of columns that grid moves to the right | number | — | 0 |\n| pull |  number of columns that grid moves to the left | number | — | 0 |\n| xs | `<768px` Responsive columns or column props object | number/object (i.e： {span: 4, offset: 4}) | — | — |\n| sm | `≥768px` Responsive columns or column props object | number/object (i.e： {span: 4, offset: 4}) | — | — |\n| md | `≥992` Responsive columns or column props object | number/object (i.e： {span: 4, offset: 4}) | — | — |\n| lg | `≥1200` Responsive columns or column props object | number/object (i.e： {span: 4, offset: 4}) | — | — |\n| tag | custom element tag | string | * | div |\n'},"./pages/layout/doc/layout.zh-CN.md":function(e,n){e.exports='## Layout 布局\n\n通过基础的 24 分栏，迅速简便地创建布局。\n\n### 基础布局\n\n使用单一分栏创建基础的栅格布局。\n\n::: demo 通过 Row 和 Col 组件，并通过 Col 组件的 `span` 属性我们就可以自由地组合布局。\n```js\nrender() {\n  return (\n    <div>\n      <Layout.Row>\n        <Layout.Col span="24"><div className="grid-content bg-purple-dark"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row>\n        <Layout.Col span="12"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="12"><div className="grid-content bg-purple-light"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row>\n        <Layout.Col span="8"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="8"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="8"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row>\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row>\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple-light"></div></Layout.Col>\n      </Layout.Row>\n    </div>\n  )\n}\n```\n:::\n\n### 分栏间隔\n\n分栏之间存在间隔。\n\n::: demo Row 组件 提供 `gutter` 属性来指定每一栏之间的间隔，默认间隔为 0。\n```js\nrender() {\n  return (\n    <Layout.Row gutter="20">\n      <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n    </Layout.Row>\n  )\n}\n```\n:::\n\n### 混合布局\n\n通过基础的 1/24 分栏任意扩展组合形成较为复杂的混合布局。\n\n::: demo\n```js\nrender() {\n  return (\n    <div>\n      <Layout.Row gutter="20">\n        <Layout.Col span="16"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="8"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row gutter="20">\n        <Layout.Col span="8"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="8"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row gutter="20">\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="16"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="4"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n    </div>\n  )\n}\n```\n:::\n\n### 分栏偏移\n\n支持偏移指定的栏数。\n\n::: demo 通过制定 Col 组件的 `offset` 属性可以指定分栏偏移的栏数。\n```js\nrender() {\n  return (\n    <div>\n      <Layout.Row gutter="20">\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6" offset="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row gutter="20">\n        <Layout.Col span="6" offset="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6" offset="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row gutter="20">\n        <Layout.Col span="12" offset="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n    </div>\n  )\n}\n```\n:::\n\n### 对齐方式\n\n对分栏进行灵活的对齐。\n\n::: demo 将 `type` 属性赋值为 \'flex\'，可以启用 flex 布局，并可通过 `justify` 属性来指定 start, center, end, space-between, space-around 其中的值来定义子元素的排版方式。\n```js\nrender() {\n  return (\n    <div>\n      <Layout.Row type="flex" className="row-bg">\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row type="flex" className="row-bg" justify="center">\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row type="flex" className="row-bg" justify="end">\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row type="flex" className="row-bg" justify="space-between">\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n      <Layout.Row type="flex" className="row-bg" justify="space-around">\n        <Layout.Col span="6"><div className="grid-content bg-purple"></div></Layout.Col>\n        <Layout.Col span="6"><div className="grid-content bg-purple-light"></div></Layout.Col>\n        <Layout.Col span={6}><div className="grid-content bg-purple"></div></Layout.Col>\n      </Layout.Row>\n    </div>\n  )\n}\n```\n:::\n\n### 响应式布局\n\n参照了 Bootstrap 的 响应式设计，预设了四个响应尺寸：`xs`、`sm`、`md`和`lg`。\n\n::: demo\n```js\nrender() {\n  return (\n    <Layout.Row gutter="10">\n      <Layout.Col xs="8" sm="6" md="4" lg="3"><div className="grid-content bg-purple"></div></Layout.Col>\n      <Layout.Col xs="4" sm="6" md="8" lg="9"><div className="grid-content bg-purple-light"></div></Layout.Col>\n      <Layout.Col xs="4" sm="6" md="8" lg="9"><div className="grid-content bg-purple"></div></Layout.Col>\n      <Layout.Col xs="8" sm="6" md="4" lg="3"><div className="grid-content bg-purple-light"></div></Layout.Col>\n    </Layout.Row>\n  )\n}\n```\n:::\n\n### Row Attributes\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| gutter | 栅格间隔 | number | — | 0 |\n| type | 布局模式，可选 flex，现代浏览器下有效 | string | — | — |\n| justify | flex 布局下的水平排列方式 | string | start/end/center/space-around/space-between | start |\n| align | flex 布局下的垂直排列方式 | string | top/middle/bottom | top |\n| tag | 自定义元素标签 | string | * | div |\n\n### Col Attributes\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| **span** | 栅格占据的列数，**必选参数** | number | — | — |\n| offset | 栅格左侧的间隔格数 | number | — | 0 |\n| push |  栅格向右移动格数 | number | — | 0 |\n| pull |  栅格向左移动格数 | number | — | 0 |\n| xs | `<768px` 响应式栅格数或者栅格属性对象 | number/object (例如： {span: 4, offset: 4}) | — | — |\n| sm | `≥768px` 响应式栅格数或者栅格属性对象 | number/object (例如： {span: 4, offset: 4}) | — | — |\n| md | `≥992` 响应式栅格数或者栅格属性对象 | number/object (例如： {span: 4, offset: 4}) | — | — |\n| lg | `≥1200` 响应式栅格数或者栅格属性对象 | number/object (例如： {span: 4, offset: 4}) | — | — |\n| tag | 自定义元素标签 | string | * | div |\n'},"./pages/layout/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=i(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=i(t("../node_modules/babel-runtime/helpers/createClass.js")),l=i(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=i(t("../node_modules/babel-runtime/helpers/inherits.js")),r=i(t("./utils/markdown/index.jsx"));function i(e){return e&&e.__esModule?e:{default:e}}t("./pages/layout/style.scss");var u=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"document",value:function(e){return t("./pages/layout/doc sync recursive ^\\.\\/layout\\..*\\.md$")("./layout."+e+".md")}}]),n}(r.default),d=u;n.default=d;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"Layout","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/layout/index.jsx"),__REACT_HOT_LOADER__.register(d,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/layout/index.jsx"))},"./pages/layout/style.scss":function(e,n,t){},"./pages/loading/doc sync recursive ^\\.\\/loading\\..*\\.md$":function(e,n,t){var o={"./loading.en-US.md":"./pages/loading/doc/loading.en-US.md","./loading.zh-CN.md":"./pages/loading/doc/loading.zh-CN.md"};function a(e){var n=l(e);return t(n)}function l(e){var n=o[e];if(n+1)return n;var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(o)},a.resolve=l,(e.exports=a).id="./pages/loading/doc sync recursive ^\\.\\/loading\\..*\\.md$"},"./pages/loading/doc/loading.en-US.md":function(e,n){e.exports='## Loading\n\nShow animation while loading data.\n\n### Loading inside a container\n\nDisplays animation in a container (such as a table) while loading data.\n\n:::demo\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.table = {\n    columns: [\n      {\n        label: "Date",\n        prop: "date",\n        width: 180\n      },\n      {\n        label: "Name",\n        prop: "name",\n        width: 180\n      },\n      {\n        label: "Address",\n        prop: "address"\n      }\n    ],\n    data: [{\n      date: \'2016-05-02\',\n      name: \'John Smith\',\n      address: \'No.1518,  Jinshajiang Road, Putuo District\'\n    }, {\n      date: \'2016-05-04\',\n      name: \'John Smith\',\n      address: \'No.1518,  Jinshajiang Road, Putuo District\'\n    }, {\n      date: \'2016-05-01\',\n      name: \'John Smith\',\n      address: \'No.1518,  Jinshajiang Road, Putuo District\'\n    }]\n  }\n}\n\nrender() {\n  return (\n    <div className="el-loading-demo">\n      <Loading>\n        <div style={{height:"120px",width:"100%"}}> 表格组件</div>\n      </Loading>\n    </div>\n  )\n}\n```\n:::\n\n### Loading text\n\nYou can customize a text message.\n\n:::demo Add attribute `text` and its value will be displayed under the spinner.\n```js\nconstructor(props) {\n  super(props);\n\n  this.table = {\n    columns: [\n      {\n        label: "Date",\n        prop: "date",\n        width: 180\n      },\n      {\n        label: "Name",\n        prop: "name",\n        width: 180\n      },\n      {\n        label: "Address",\n        prop: "address"\n      }\n    ],\n    data: [{\n      date: \'2016-05-02\',\n      name: \'John Smith\',\n      address: \'No.1518,  Jinshajiang Road, Putuo District\'\n    }, {\n      date: \'2016-05-04\',\n      name: \'John Smith\',\n      address: \'No.1518,  Jinshajiang Road, Putuo District\'\n    }, {\n      date: \'2016-05-01\',\n      name: \'John Smith\',\n      address: \'No.1518,  Jinshajiang Road, Putuo District\'\n    }]\n  }\n}\n\nrender() {\n  return (\n    <div className="el-loading-demo">\n      <Loading text="Loading...">\n        <div style={{height:"120px",width:"100%"}}>表格组件</div>\n      </Loading>\n    </div>\n  )\n}\n```\n:::\n\n### Full screen loading\n\nShow a full screen animation while loading data.\n\n:::demo Add the `fullscreen` modifier to create a full screen mask, and it will append to body.\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    fullscreen: false\n  }\n}\n\nonClick() {\n  clearTimeout(this.timeout);\n\n  this.timeout = setTimeout(() => {\n    this.setState({\n      fullscreen: false\n    });\n  }, 3000);\n\n  this.setState({\n    fullscreen: true\n  });\n}\n\nrender() {\n  return (\n    <div>\n      <Button type="primary" onClick={this.onClick.bind(this)}>Full screen loading for 3 seconds</Button>\n      {\n        this.state.fullscreen && <Loading fullscreen={true} />\n      }\n    </div>\n  )\n}\n```\n:::\n\n### Options\n| Attribute      | Description          | Type      | Accepted Values       | Default  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| fullscreen | same as the `fullscreen` modifier of `v-loading` | boolean | — | true |\n| text | loading text that displays under the spinner | string | — | — |\n| loading | control the loading state | bool | - | true |\n'},"./pages/loading/doc/loading.zh-CN.md":function(e,n){e.exports="## Loading 加载\n\n加载数据时显示动效。\n\n### 区域加载\n\n在表格等容器中加载数据时显示。\n\n:::demo\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.table = {\n    columns: [\n      {\n        label: \"日期\",\n        prop: \"date\",\n        width: 180\n      },\n      {\n        label: \"姓名\",\n        prop: \"name\",\n        width: 180\n      },\n      {\n        label: \"地址\",\n        prop: \"address\"\n      }\n    ],\n    data: [{\n      date: '2016-05-02',\n      name: '王小虎',\n      address: '上海市普陀区金沙江路 1518 弄'\n    }, {\n      date: '2016-05-04',\n      name: '王小虎',\n      address: '上海市普陀区金沙江路 1517 弄'\n    }, {\n      date: '2016-05-01',\n      name: '王小虎',\n      address: '上海市普陀区金沙江路 1519 弄'\n    }, {\n      date: '2016-05-03',\n      name: '王小虎',\n      address: '上海市普陀区金沙江路 1516 弄'\n    }]\n  }\n}\n\nrender() {\n  return (\n    <div className=\"ko-loading-demo\">\n      <Loading>\n        <div style={{height:\"120px\",width:\"100%\"}}>表格组件</div>\n      </Loading>\n    </div>\n  )\n}\n```\n:::\n\n### 加载文案\n\n可自定义加载文案。\n\n:::demo 添加`text`属性，其值会被渲染为加载文案，并显示在加载图标的下方。\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.table = {\n    columns: [\n      {\n        label: \"日期\",\n        prop: \"date\",\n        width: 180\n      },\n      {\n        label: \"姓名\",\n        prop: \"name\",\n        width: 180\n      },\n      {\n        label: \"地址\",\n        prop: \"address\"\n      }\n    ],\n    data: [{\n      date: '2016-05-02',\n      name: '王小虎',\n      address: '上海市普陀区金沙江路 1518 弄'\n    }, {\n      date: '2016-05-04',\n      name: '王小虎',\n      address: '上海市普陀区金沙江路 1517 弄'\n    }, {\n      date: '2016-05-01',\n      name: '王小虎',\n      address: '上海市普陀区金沙江路 1519 弄'\n    }, {\n      date: '2016-05-03',\n      name: '王小虎',\n      address: '上海市普陀区金沙江路 1516 弄'\n    }]\n  }\n}\n\nrender() {\n  return (\n    <div className=\"ko-loading-demo\">\n      <Loading text=\"拼命加载中\">\n         <div style={{height:\"120px\",width:\"100%\"}}>表格组件</div>\n      </Loading>\n    </div>\n  )\n}\n```\n:::\n\n### 整页加载\n\n页面数据加载时显示。\n\n:::demo 当需要全屏遮罩时，可使用`fullscreen`修饰符（此时遮罩会插入至 body 上）。\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    fullscreen: false\n  }\n}\n\nonClick() {\n  clearTimeout(this.timeout);\n\n  this.timeout = setTimeout(() => {\n    this.setState({\n      fullscreen: false\n    });\n  }, 3000);\n\n  this.setState({\n    fullscreen: true\n  });\n}\n\nrender() {\n  return (\n    <div>\n      <Button type=\"primary\" onClick={this.onClick.bind(this)}>显示整页加载，3 秒后消失</Button>\n      {\n        this.state.fullscreen && <Loading fullscreen={true} />\n      }\n    </div>\n  )\n}\n```\n:::\n\n### Attributes\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| fullscreen | 是否全屏显示 | bool | - | false |\n| text | 自定义加载文案 | string | - | - |\n| loading | 控制加载页显示 | bool | - | true |\n"},"./pages/loading/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=i(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=i(t("../node_modules/babel-runtime/helpers/createClass.js")),l=i(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=i(t("../node_modules/babel-runtime/helpers/inherits.js")),r=i(t("./utils/markdown/index.jsx"));function i(e){return e&&e.__esModule?e:{default:e}}t("./pages/loading/style.scss");var u=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"document",value:function(e){return t("./pages/loading/doc sync recursive ^\\.\\/loading\\..*\\.md$")("./loading."+e+".md")}}]),n}(r.default),d=u;n.default=d;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"Loading","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/loading/index.jsx"),__REACT_HOT_LOADER__.register(d,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/loading/index.jsx"))},"./pages/loading/style.scss":function(e,n,t){},"./pages/quick-start/doc sync recursive ^\\.\\/quick\\-start\\..*\\.md$":function(e,n,t){var o={"./quick-start.en-US.md":"./pages/quick-start/doc/quick-start.en-US.md","./quick-start.zh-CN.md":"./pages/quick-start/doc/quick-start.zh-CN.md"};function a(e){var n=l(e);return t(n)}function l(e){var n=o[e];if(n+1)return n;var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(o)},a.resolve=l,(e.exports=a).id="./pages/quick-start/doc sync recursive ^\\.\\/quick\\-start\\..*\\.md$"},"./pages/quick-start/doc/quick-start.en-US.md":function(e,n){e.exports="## Quick start\n\n### Installation\nInstalling with npm is recommended and it works seamlessly with `webpack`.\n\n```shell\nnpm i ko-rt --save\n```\n### Theme\nBefore the building, you need a style theme, here we recommend you to pick up `ko-theme`.\n\n```shell\nnpm install ko-theme --save\n```\n\n### Usage\n\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button } from 'ko-rt';\n\nimport 'ko-theme';\n\nReactDOM.render(<Button type=\"primary\">Hello</Button>, document.getElementById('app'));\n\n```\n"},"./pages/quick-start/doc/quick-start.zh-CN.md":function(e,n){e.exports="## 快速上手\n\n### 安装\n推荐使用 npm 的方式安装，它能更好地和`webpack`打包工具配合使用。\n\n```shell\nnpm i ko-rt --save\n```\n\n### 主题\n开始前, 你还需要一个主题包, 这里我们推荐使用`ko-theme`.\n\n```shell\nnpm install ko-theme --save\n```\n\n### 使用\n\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button } from 'ko-rt';\n\nimport 'ko-theme';\n\nReactDOM.render(<Button type=\"primary\">Hello word</Button>, document.getElementById('app'));\n\n```\n"},"./pages/quick-start/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=r(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=r(t("../node_modules/babel-runtime/helpers/createClass.js")),l=r(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=r(t("../node_modules/babel-runtime/helpers/inherits.js"));function r(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"document",value:function(e){return t("./pages/quick-start/doc sync recursive ^\\.\\/quick\\-start\\..*\\.md$")("./quick-start."+e+".md")}}]),n}(r(t("./utils/markdown/index.jsx")).default),u=i;n.default=u;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(i,"QuickStart","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/quick-start/index.jsx"),__REACT_HOT_LOADER__.register(u,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/quick-start/index.jsx"))},"./pages/select/doc sync recursive ^\\.\\/select\\..*\\.md$":function(e,n,t){var o={"./select.en-US.md":"./pages/select/doc/select.en-US.md","./select.zh-CN.md":"./pages/select/doc/select.zh-CN.md"};function a(e){var n=l(e);return t(n)}function l(e){var n=o[e];if(n+1)return n;var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(o)},a.resolve=l,(e.exports=a).id="./pages/select/doc sync recursive ^\\.\\/select\\..*\\.md$"},"./pages/select/doc/select.en-US.md":function(e,n){e.exports="## Select\n\nWhen there are plenty of options, use a drop-down menu to display and select desired ones.\n\n### Basic usage\n\n:::demo `value` is the value of `Option` that is currently selected.\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      value: 'Option1',\n      label: 'Option1'\n    }, {\n      value: 'Option2',\n      label: 'Option2'\n    }, {\n      value: 'Option3',\n      label: 'Option3'\n    }, {\n      value: 'Option4',\n      label: 'Option4'\n    }, {\n      value: 'Option5',\n      label: 'Option5'\n    }],\n    value: ''\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### Disabled option\n\n:::demo Set the value of `disabled` in `Option` to `true` to disable this option.\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      value: 'Option1',\n      label: 'Option1'\n    }, {\n      value: 'Option2',\n      label: 'Option2',\n      disabled: true\n    }, {\n      value: 'Option3',\n      label: 'Option3'\n    }, {\n      value: 'Option4',\n      label: 'Option4'\n    }, {\n      value: 'Option5',\n      label: 'Option5'\n    }],\n    value: ''\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} disabled={el.disabled} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### Disabled select\n\nDisable the whole component.\n\n:::demo Set `disabled` of `Select` to make it disabled.\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      value: '选项1',\n      label: '黄金糕'\n    }, {\n      value: '选项2',\n      label: '双皮奶'\n    }, {\n      value: '选项3',\n      label: '蚵仔煎'\n    }, {\n      value: '选项4',\n      label: '龙须面'\n    }, {\n      value: '选项5',\n      label: '北京烤鸭'\n    }],\n    value: ''\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value} disabled={true}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### Clearable single select\n\nYou can clear Select using a clear icon.\n\n:::demo Set `clearable` attribute for `Select` and a clear icon will appear. Note that `clearable` is only for single select.\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      value: 'Option1',\n      label: 'Option1'\n    }, {\n      value: 'Option2',\n      label: 'Option2'\n    }, {\n      value: 'Option3',\n      label: 'Option3'\n    }, {\n      value: 'Option4',\n      label: 'Option4'\n    }, {\n      value: 'Option5',\n      label: 'Option5'\n    }],\n    value: ''\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value} clearable={true}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### Basic multiple select\n\nMultiple select uses tags to display selected options.\n\n:::demo Set `multiple` attribute for `Select` to enable multiple mode. In this case, the value of `value` will be an array of selected options.\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      value: 'Option1',\n      label: 'Option1'\n    }, {\n      value: 'Option2',\n      label: 'Option2'\n    }, {\n      value: 'Option3',\n      label: 'Option3'\n    }, {\n      value: 'Option4',\n      label: 'Option4'\n    }, {\n      value: 'Option5',\n      label: 'Option5'\n    }],\n    value: []\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value} multiple={true}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### Custom template\n\nYou can customize HTML templates for options.\n\n:::demo Insert customized HTML templates into `Option`.\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    cities: [{\n      value: 'Beijing',\n      label: 'Beijing'\n    }, {\n      value: 'Shanghai',\n      label: 'Shanghai'\n    }, {\n      value: 'Nanjing',\n      label: 'Nanjing'\n    }, {\n      value: 'Chengdu',\n      label: 'Chengdu'\n    }, {\n      value: 'Shenzhen',\n      label: 'Shenzhen'\n    }, {\n      value: 'Guangzhou',\n      label: 'Guangzhou'\n    }],\n    value: []\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value}>\n      {\n        this.state.cities.map(el => {\n          return (\n            <Select.Option key={el.value} label={el.label} value={el.value}>\n              <span style={{float: 'left'}}>{el.label}</span>\n              <span style={{float: 'right', color: '#8492a6', fontSize: 13}}>{el.value}</span>\n            </Select.Option>\n          )\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### Grouping\n\nDisplay options in groups.\n\n:::demo Use `OptionGroup` to group the options, and its `label` attribute stands for the name of the group.\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      label: 'Popular cities',\n      options: [{\n        value: 'Shanghai',\n        label: 'Shanghai'\n      }, {\n        value: 'Beijing',\n        label: 'Beijing'\n      }]\n    }, {\n      label: 'City name',\n      options: [{\n        value: 'Chengdu',\n        label: 'Chengdu'\n      }, {\n        value: 'Shenzhen',\n        label: 'Shenzhen'\n      }, {\n        value: 'Guangzhou',\n        label: 'Guangzhou'\n      }, {\n        value: 'Dalian',\n        label: 'Dalian'\n      }]\n    }],\n    value: ''\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value}>\n      {\n        this.state.options.map(group => {\n          return (\n            <Select.OptionGroup key={group.label} label={group.label}>\n              {\n                group.options.map(el => {\n                  return (\n                    <Select.Option key={el.value} label={el.label} value={el.value}>\n                      <span style={{float: 'left'}}>{el.label}</span>\n                      <span style={{float: 'right', color: '#8492a6', fontSize: 13}}>{el.value}</span>\n                    </Select.Option>\n                  )\n                })\n              }\n            </Select.OptionGroup>\n          )\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### Option filtering\n\nYou can filter options for your desired ones.\n\n:::demo Adding `filterable` to `Select` enables filtering. By default, Select will find all the options whose `label` attribute contains the input value. If you prefer other filtering strategies, you can pass the `filterMethod`. `filterMethod` is a `Function` that gets called when the input value changes, and its parameter is the current input value.\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      value: 'Option1',\n      label: 'Option1'\n    }, {\n      value: 'Option2',\n      label: 'Option2'\n    }, {\n      value: 'Option3',\n      label: 'Option3'\n    }, {\n      value: 'Option4',\n      label: 'Option4'\n    }, {\n      value: 'Option5',\n      label: 'Option5'\n    }],\n    value: []\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value} filterable={true}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### Remote Search\n\nEnter keywords and search data from server.\n\n:::demo Set the value of `filterable` and `remote` with `true` to enable remote search, and you should pass the `remoteMethod`. `remoteMethod` is a `Function` that gets called when the input value changes, and its parameter is the current input value.\n\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [],\n    states: [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\",   \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\",\n    \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"]\n  }\n}\n\nonSearch(query) {\n  if (query !== '') {\n    this.setState({\n      loading: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        loading: false,\n        options: this.state.states.map(item => {\n          return { value: item, label: item };\n        }).filter(item => {\n          return item.label.toLowerCase().indexOf(query.toLowerCase()) > -1;\n        })\n      });\n    }, 200);\n  } else {\n    this.setState({\n      options: []\n    });\n  }\n}\n\nrender() {\n  return (\n    <Select value={this.state.value} multiple={true} filterable={true} remote={true} remoteMethod={this.onSearch.bind(this)} loading={this.state.loading}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### Select Attributes\n| Attribute      | Description          | Type      | Accepted Values       | Default  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| multiple | whether multiple-select is activated | boolean | — | false |\n| disabled | whether Select is disabled | boolean | — | false |\n| size | size of Input | string | large/small/mini | — |\n| clearable | whether single select can be cleared | boolean | — | false |\n| multipleLimit | maximum number of options user can select when `multiple` is `true`. No limit when set to 0 | number | — | 0 |\n| name | the name attribute of select input | string | — | — |\n| placeholder | placeholder | string | — | Select |\n| filterable | whether Select is filterable | boolean | — | false |\n| allowCreate | whether creating new items is allowed. To use this, `filterable` must be true | boolean | — | false |\n| filterMethod | custom filter method | function | — | — |\n| remote | whether options are loaded from server | boolean | — | false |\n| remoteMethod | custom remote search method | function | — | — |\n| loading | whether Select is loading data from server | boolean | — | false |\n| loadingText | displayed text while loading data from server | string | — | Loading |\n| noMatchText | displayed text when no data matches the filtering query | string | — | No matching data |\n| noDataText | displayed text when there is no options | string | — | No data |\n| popperClass | custom class name for Select's dropdown | string | — | — |\n\n### Select Events\n| Event Name | Description | Parameters |\n|---------|---------|---------|\n| onChange | triggers when the selected value changes | current selected value |\n| onVisibleChange | triggers when the dropdown appears/disappears | true when it appears, and false otherwise |\n| onRemoveTag | triggers when a tag is removed in multiple mode | removed tag value |\n| onClear | triggers when the clear icon is clicked in a clearable Select | - |\n\n### Option Group Attributes\n| Attribute      | Description          | Type      | Accepted Values       | Default  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| label | name of the group | string | — | — |\n| disabled | whether to disable all options in this group | boolean | — | false |\n\n### Option Attributes\n| Attribute      | Description          | Type      | Accepted Values       | Default  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| value | value of option | string/number/object | — | — |\n| label | label of option, same as `value` if omitted | string/number | — | — |\n| disabled | whether option is disabled | boolean | — | false |\n"},"./pages/select/doc/select.zh-CN.md":function(e,n){e.exports="## Select 选择器\n\n当选项过多时，使用下拉菜单展示并选择内容。\n\n### 基础用法\n\n适用广泛的基础单选\n\n:::demo `value`的值为当前被选中的`Option`的 value 属性值\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      value: 'k_1',\n      label: 'react'\n    }, {\n      value: 'k_2',\n      label: 'vue'\n    }, {\n      value: 'k_3',\n      label: 'ng'\n    }, {\n      value: 'k_4',\n      label: 'rxjs'\n    }, {\n      value: 'k_5',\n      label: 'redux'\n    }],\n    value: ''\n  };\n}\nrender() {\n  return (\n      <Select value={this.state.value} placeholder=\"请选择\">\n        {\n          this.state.options.map(el => {\n            return <Select.Option key={el.value} label={el.label} value={el.value} />\n          })\n        }\n      </Select>\n  )\n}\n```\n:::\n\n### 有禁用选项\n\n:::demo 在`Option`中，设定`disabled`值为 true，即可禁用该选项\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      value: 'k_1',\n      label: 'react'\n    }, {\n      value: 'k_2',\n      label: 'vue',\n      disabled: true\n    }, {\n      value: 'k_3',\n      label: 'ng'\n    }, {\n      value: 'k_4',\n      label: 'rxjs'\n    }, {\n      value: 'k_5',\n      label: 'redux'\n    }],\n    value: ''\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} disabled={el.disabled} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### 禁用状态\n\n选择器不可用状态\n\n:::demo 为`Select`设置`disabled`属性，则整个选择器不可用\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      value: 'k_1',\n      label: 'react'\n    }, {\n      value: 'k_2',\n      label: 'vue'\n    }, {\n      value: 'k_3',\n      label: 'ng'\n    }, {\n      value: 'k_4',\n      label: 'rxjs'\n    }, {\n      value: 'k_5',\n      label: 'redux'\n    }],\n    value: ''\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value} disabled={true}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### 可清空单选\n\n包含清空按钮，可将选择器清空为初始状态\n\n:::demo 为`Select`设置`clearable`属性，则可将选择器清空。需要注意的是，`clearable`属性仅适用于单选。\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      value: 'k_1',\n      label: 'react'\n    }, {\n      value: 'k_2',\n      label: 'vue'\n    }, {\n      value: 'k_3',\n      label: 'ng'\n    }, {\n      value: 'k_4',\n      label: 'rxjs'\n    }, {\n      value: 'k_5',\n      label: 'redux'\n    }],\n    value: ''\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value} clearable={true}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### 基础多选\n\n适用性较广的基础多选，用 Tag 展示已选项\n\n:::demo 为`Select`设置`multiple`属性即可启用多选，此时`value`的值为当前选中值所组成的数组\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      value: 'k_1',\n      label: 'react'\n    }, {\n      value: 'k_2',\n      label: 'vue'\n    }, {\n      value: 'k_3',\n      label: 'ng'\n    }, {\n      value: 'k_4',\n      label: 'rxjs'\n    }, {\n      value: 'k_5',\n      label: 'redux'\n    }],\n    value: []\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value} multiple={true}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### 自定义模板\n\n可以自定义备选项\n\n:::demo 将自定义的 HTML 模板插入`Option`中即可。\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    cities: [{\n      value: 'Beijing',\n      label: '北京'\n    }, {\n      value: 'Shanghai',\n      label: '上海'\n    }, {\n      value: 'Nanjing',\n      label: '南京'\n    }, {\n      value: 'Chengdu',\n      label: '成都'\n    }, {\n      value: 'Shenzhen',\n      label: '深圳'\n    }, {\n      value: 'Guangzhou',\n      label: '广州'\n    }],\n    value: []\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value}>\n      {\n        this.state.cities.map(el => {\n          return (\n            <Select.Option key={el.value} label={el.label} value={el.value}>\n              <span style={{float: 'left'}}>{el.label}</span>\n              <span style={{float: 'right', color: '#8492a6', fontSize: 13}}>{el.value}</span>\n            </Select.Option>\n          )\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### 分组\n\n备选项进行分组展示\n\n:::demo 使用`OptionGroup`对备选项进行分组，它的`label`属性为分组名\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      label: '热门城市',\n      options: [{\n        value: 'Shanghai',\n        label: '上海'\n      }, {\n        value: 'Beijing',\n        label: '北京'\n      }]\n    }, {\n      label: '城市名',\n      options: [{\n        value: 'Chengdu',\n        label: '成都'\n      }, {\n        value: 'Shenzhen',\n        label: '深圳'\n      }, {\n        value: 'Guangzhou',\n        label: '广州'\n      }, {\n        value: 'Dalian',\n        label: '大连'\n      }]\n    }],\n    value: ''\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value}>\n      {\n        this.state.options.map(group => {\n          return (\n            <Select.OptionGroup key={group.label} label={group.label}>\n              {\n                group.options.map(el => {\n                  return (\n                    <Select.Option key={el.value} label={el.label} value={el.value}>\n                      <span style={{float: 'left'}}>{el.label}</span>\n                      <span style={{float: 'right', color: '#8492a6', fontSize: 13}}>{el.value}</span>\n                    </Select.Option>\n                  )\n                })\n              }\n            </Select.OptionGroup>\n          )\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### 可搜索\n\n可以利用搜索功能快速查找选项\n\n:::demo 为`Select`添加`filterable`属性即可启用搜索功能。默认情况下，Select 会找出所有`label`属性包含输入值的选项。如果希望使用其他的搜索逻辑，可以通过传入一个`filterMethod`来实现。`filterMethod`为一个`Function`，它会在输入值发生变化时调用，参数为当前输入值。\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [{\n      value: 'k_1',\n      label: 'react'\n    }, {\n      value: 'k_2',\n      label: 'vue'\n    }, {\n      value: 'k_3',\n      label: 'ng'\n    }, {\n      value: 'k_4',\n      label: 'rxjs'\n    }, {\n      value: 'k_5',\n      label: 'redux'\n    }],\n    value: []\n  };\n}\n\nrender() {\n  return (\n    <Select value={this.state.value} filterable={true}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### 远程搜索\n\n从服务器搜索数据，输入关键字进行查找\n\n:::demo 为了启用远程搜索，需要将`filterable`和`remote`设置为`true`，同时传入一个`remoteMethod`。`remoteMethod`为一个`Function`，它会在输入值发生变化时调用，参数为当前输入值。\n```js\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    options: [],\n    states: [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\",   \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\",\n    \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"]\n  }\n}\n\nonSearch(query) {\n  if (query !== '') {\n    this.setState({\n      loading: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        loading: false,\n        options: this.state.states.map(item => {\n          return { value: item, label: item };\n        }).filter(item => {\n          return item.label.toLowerCase().indexOf(query.toLowerCase()) > -1;\n        })\n      });\n    }, 200);\n  } else {\n    this.setState({\n      options: []\n    });\n  }\n}\n\nrender() {\n  return (\n    <Select value={this.state.value} multiple={true} filterable={true} remote={true} remoteMethod={this.onSearch.bind(this)} loading={this.state.loading}>\n      {\n        this.state.options.map(el => {\n          return <Select.Option key={el.value} label={el.label} value={el.value} />\n        })\n      }\n    </Select>\n  )\n}\n```\n:::\n\n### Select Attributes\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| multiple | 是否多选 | boolean | — | false |\n| disabled | 是否禁用 | boolean | — | false |\n| clearable | 单选时是否可以清空选项 | boolean | — | false |\n| name | select input 的 name 属性 | string | — | — |\n| placeholder | 占位符 | string | — | 请选择 |\n| filterable | 是否可搜索 | boolean | — | false |\n| filterMethod | 自定义过滤方法 | function | — | — |\n| remote | 是否为远程搜索 | boolean | — | false |\n| remoteMethod | 远程搜索方法 | function | — | — |\n| loading | 是否正在从远程获取数据 | boolean | — | false |\n\n### Select Events\n| 事件名称 | 说明 | 回调参数 |\n|---------|---------|---------|\n| onChange | 选中值发生变化时触发 | 目前的选中值 |\n| onVisibleChange | 下拉框出现/隐藏时触发 | 出现则为 true，隐藏则为 false |\n| onRemoveTag | 多选模式下移除tag时触发 | 移除的tag值 |\n| onClear | 可清空的单选模式下用户点击清空按钮时触发 | - |\n\n### Option Group Attributes\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| label | 分组的组名 | string | — | — |\n| disabled | 是否将该分组下所有选项置为禁用 | boolean | — | false |\n\n### Option Attributes\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| value | 选项的值 | string/number/object | — | — |\n| label | 选项的标签，若不设置则默认与 `value` 相同 | string/number | — | — |\n| disabled | 是否禁用该选项 | boolean | — | false |\n"},"./pages/select/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=i(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=i(t("../node_modules/babel-runtime/helpers/createClass.js")),l=i(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=i(t("../node_modules/babel-runtime/helpers/inherits.js")),r=i(t("./utils/markdown/index.jsx"));function i(e){return e&&e.__esModule?e:{default:e}}t("./pages/select/style.scss");var u=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"document",value:function(e){return t("./pages/select/doc sync recursive ^\\.\\/select\\..*\\.md$")("./select."+e+".md")}}]),n}(r.default),d=u;n.default=d;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"Select","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/select/index.jsx"),__REACT_HOT_LOADER__.register(d,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/select/index.jsx"))},"./pages/select/style.scss":function(e,n,t){},"./pages/typography/doc sync recursive ^\\.\\/typography\\..*\\.md$":function(e,n,t){var o={"./typography.en-US.md":"./pages/typography/doc/typography.en-US.md","./typography.zh-CN.md":"./pages/typography/doc/typography.zh-CN.md"};function a(e){var n=l(e);return t(n)}function l(e){var n=o[e];if(n+1)return n;var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(o)},a.resolve=l,(e.exports=a).id="./pages/typography/doc sync recursive ^\\.\\/typography\\..*\\.md$"},"./pages/typography/doc/typography.en-US.md":function(e,n){e.exports='## Typography\n\nWe create a font convention to ensure the best presentation across different platforms.\n\n### Chinese Font\n\n<div class="demo-typo-box typo-PingFang">\n  和畅惠风\n  <div class="name">PingFang SC</div>\n</div>\n<div class="demo-typo-box typo-Hiragino">\n  和畅惠风\n  <div class="name">Hiragino Sans GB</div>\n</div>\n<div class="demo-typo-box typo-Microsoft">\n  和畅惠风\n  <div class="name">Microsoft YaHei</div>\n</div>\n\n### English / Numberic Font\n\n<div class="demo-typo-box typo-Helvetica-neue">\n  RGag\n  <div class="name">Helvetica Neue</div>\n</div>\n<div class="demo-typo-box typo-Helvetica">\n  RGag\n  <div class="name">Helvetica</div>\n</div>\n<div class="demo-typo-box typo-Arial">\n  RGag\n  <div class="name">Arial</div>\n</div>\n\n### Font-family\n\n```css\nfont-family: "Helvetica Neue",Helvetica,"PingFang SC","Hiragino Sans GB","Microsoft YaHei","微软雅黑",Arial,sans-serif;\n```\n\n### Font Convention\n\n<table class="demo-typo-size">\n  <tbody>\n    <tr>\n      <td class="h1">Main Title</td>\n      <td class="h1">Build with Element</td>\n      <td class="color-dark-light">20px  Extra large</td>\n    </tr>\n    <tr>\n      <td class="h2">Title</td>\n      <td class="h2">Build with Element</td>\n      <td class="color-dark-light">18px large</td>\n    </tr>\n    <tr>\n      <td class="h3">Small Title</td>\n      <td class="h3">Build with Element</td>\n      <td class="color-dark-light">16px Medium</td>\n    </tr>\n    <tr>\n      <td class="text-regular">Body</td>\n      <td class="text-regular">Build with Element</td>\n      <td class="color-dark-light">14px Small</td>\n    </tr>\n    <tr>\n      <td class="text-small">Body (small)\t</td>\n      <td class="text-small">Build with Element</td>\n      <td class="color-dark-light">13px Extra Small</td>\n    </tr>\n    <tr>\n      <td class="text-smaller">Supplementary text</td>\n      <td class="text-smaller">Build with Element</td>\n      <td class="color-dark-light">12px Extra Extra Small</td>\n    </tr>\n  </tbody>\n</table>\n'},"./pages/typography/doc/typography.zh-CN.md":function(e,n){e.exports='## Typography 字体\n\n我们对字体进行统一规范，力求在各个操作系统下都有最佳展示效果。\n\n### 中文字体\n\n<div class="demo-typo-box typo-PingFang">\n  和畅惠风\n  <div class="name">PingFang SC</div>\n</div>\n<div class="demo-typo-box typo-Hiragino">\n  和畅惠风\n  <div class="name">Hiragino Sans GB</div>\n</div>\n<div class="demo-typo-box typo-Microsoft">\n  和畅惠风\n  <div class="name">Microsoft YaHei</div>\n</div>\n\n### 英文／数字字体\n\n<div class="demo-typo-box typo-Helvetica-neue">\n  RGag\n  <div class="name">Helvetica Neue</div>\n</div>\n<div class="demo-typo-box typo-Helvetica">\n  RGag\n  <div class="name">Helvetica</div>\n</div>\n<div class="demo-typo-box typo-Arial">\n  RGag\n  <div class="name">Arial</div>\n</div>\n\n### Font-family 代码\n\n```css\nfont-family: "Helvetica Neue",Helvetica,"PingFang SC","Hiragino Sans GB","Microsoft YaHei","微软雅黑",Arial,sans-serif;\n```\n\n### 字体使用规范\n\n<table class="demo-typo-size">\n  <tbody>\n    <tr>\n      <td class="h1">主标题</td>\n      <td class="h1">用 Element 快速搭建页面</td>\n      <td class="color-dark-light">20px  Extra large</td>\n    </tr>\n    <tr>\n      <td class="h2">标题</td>\n      <td class="h2">用 Element 快速搭建页面</td>\n      <td class="color-dark-light">18px large</td>\n    </tr>\n    <tr>\n      <td class="h3">小标题</td>\n      <td class="h3">用 Element 快速搭建页面</td>\n      <td class="color-dark-light">16px Medium</td>\n    </tr>\n    <tr>\n      <td class="text-regular">正文</td>\n      <td class="text-regular">用 Element 快速搭建页面</td>\n      <td class="color-dark-light">14px Small</td>\n    </tr>\n    <tr>\n      <td class="text-small">正文（小）</td>\n      <td class="text-small">用 Element 快速搭建页面</td>\n      <td class="color-dark-light">13px Extra Small</td>\n    </tr>\n    <tr>\n      <td class="text-smaller">辅助文字</td>\n      <td class="text-smaller">用 Element 快速搭建页面</td>\n      <td class="color-dark-light">12px Extra Extra Small</td>\n    </tr>\n  </tbody>\n</table>\n'},"./pages/typography/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=i(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=i(t("../node_modules/babel-runtime/helpers/createClass.js")),l=i(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=i(t("../node_modules/babel-runtime/helpers/inherits.js")),r=i(t("./utils/markdown/index.jsx"));function i(e){return e&&e.__esModule?e:{default:e}}t("./pages/typography/style.scss");var u=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"documentShouldTransform",value:function(){return!1}},{key:"document",value:function(e){return t("./pages/typography/doc sync recursive ^\\.\\/typography\\..*\\.md$")("./typography."+e+".md")}}]),n}(r.default),d=u;n.default=d;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"Typography","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/typography/index.jsx"),__REACT_HOT_LOADER__.register(d,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/pages/typography/index.jsx"))},"./pages/typography/style.scss":function(e,n,t){},"./utils/editor/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=c(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=c(t("../node_modules/babel-runtime/helpers/createClass.js")),l=c(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=c(t("../node_modules/babel-runtime/helpers/inherits.js")),r=t("../node_modules/react/index.js"),i=c(r),u=c(t("../node_modules/prop-types/index.js")),d=c(t("../node_modules/codemirror/lib/codemirror.js"));function c(e){return e&&e.__esModule?e:{default:e}}t("../node_modules/codemirror/mode/jsx/jsx.js"),t("../node_modules/codemirror/keymap/sublime.js"),t("../node_modules/codemirror/addon/comment/comment.js"),t("../node_modules/codemirror/lib/codemirror.css"),t("./utils/editor/style.scss");var p=function(e){function n(){return(0,o.default)(this,n),(0,l.default)(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return(0,s.default)(n,e),(0,a.default)(n,[{key:"componentDidMount",value:function(){var n=this,e=this.props,t=e.onChange,o=e.value;this.cm=(0,d.default)(this.editor,{mode:"jsx",theme:"react",keyMap:"sublime",viewportMargin:1/0,lineNumbers:!1,dragDrop:!1}),this.cm.setValue(o),this.cm.on("changes",function(e){t&&(clearTimeout(n.timeout),n.timeout=setTimeout(function(){t(e.getValue())},300))})}},{key:"render",value:function(){var n=this;return i.default.createElement("div",{className:"editor",ref:function(e){return n.editor=e}})}}]),n}(r.Component),m=p;n.default=m,p.propTypes={onChange:u.default.func,value:u.default.string};"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(p,"Editor","/Users/charlesyang/space/workspace/team/ko-react/preview/utils/editor/index.jsx"),__REACT_HOT_LOADER__.register(m,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/utils/editor/index.jsx"))},"./utils/editor/style.scss":function(e,n,t){},"./utils/markdown/canvas.jsx":function(e,n,o){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var s=g(o("../node_modules/babel-runtime/helpers/toConsumableArray.js")),a=g(o("../node_modules/babel-runtime/helpers/classCallCheck.js")),l=g(o("../node_modules/babel-runtime/helpers/createClass.js")),r=g(o("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),i=g(o("../node_modules/babel-runtime/helpers/inherits.js")),u=g(o("../node_modules/react/index.js")),d=g(o("../node_modules/react-dom/index.js")),t=g(o("../node_modules/prop-types/index.js")),c=g(o("../node_modules/marked/lib/marked.js")),p=o("../node_modules/babel-standalone/babel.js"),m=g(o("./utils/editor/index.jsx"));function g(e){return e&&e.__esModule?e:{default:e}}var v=function(e){function t(e){(0,a.default)(this,t);var n=(0,r.default)(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return console.log(n.props,n.props.children,"ewewwerr"),n.playerId=""+parseInt(1e9*Math.random()).toString(36),n.document=n.props.children.match(/([^]*)\n?(```[^]+```)/),console.log(n.document,"document"),n.description=(0,c.default)(n.document[1]),n.source=n.document[2].match(/```(.*)\n?([^]+)```/),n.state={showBlock:!1},n}return(0,i.default)(t,e),(0,l.default)(t,[{key:"componentDidMount",value:function(){this.renderSource(this.source[2])}},{key:"blockControl",value:function(){this.setState({showBlock:!this.state.showBlock})}},{key:"renderSource",value:function(a){var l=this;Promise.resolve().then(o.t.bind(null,"../src/index.js",7)).then(function(e){var n=["context","React","ReactDOM"],t=[l,u.default,d.default];for(var o in e)n.push(o),t.push(e[o]);return{args:n,argv:t}}).then(function(e){var n=e.args,t=e.argv,o=(0,p.transform)("\n        class Demo extends React.Component {\n          "+a+"\n        }\n\n        ReactDOM.render(<Demo {...context.props} />, document.getElementById('"+l.playerId+"'))\n      ",{presets:["es2015","react"]}).code;n.push(o),(new(Function.prototype.bind.apply(Function,[null].concat((0,s.default)(n))))).apply(null,t),l.source[2]=a}).catch(function(e){0})}},{key:"render",value:function(){var n=this,t="quick-start";return location.href.replace(/\/\w+-?\w+/g,function(e){t=e.substring(1)}),u.default.createElement("div",{className:"demo-block demo-box demo-"+t},u.default.createElement("div",{className:"source",id:this.playerId}),this.state.showBlock&&u.default.createElement("div",{className:"meta"},this.description&&u.default.createElement("div",{ref:"description",className:"description",dangerouslySetInnerHTML:{__html:this.description}}),u.default.createElement(m.default,{value:this.source[2],onChange:function(e){return n.renderSource(e)}})),u.default.createElement("div",{className:"demo-block-control",onClick:this.blockControl.bind(this)},this.state.showBlock?u.default.createElement("span",null,u.default.createElement("i",{className:"el-icon-caret-top"}),this.props.locale.hide):u.default.createElement("span",null,u.default.createElement("i",{className:"el-icon-caret-bottom"}),this.props.locale.show)))}}]),t}(u.default.Component),h=v;n.default=h,v.propTypes={locale:t.default.object},v.defaultProps={locale:{}};"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(v,"Canvas","/Users/charlesyang/space/workspace/team/ko-react/preview/utils/markdown/canvas.jsx"),__REACT_HOT_LOADER__.register(h,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/utils/markdown/canvas.jsx"))},"./utils/markdown/index.jsx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var d=m(t("../node_modules/babel-runtime/helpers/slicedToArray.js")),o=m(t("../node_modules/babel-runtime/helpers/classCallCheck.js")),a=m(t("../node_modules/babel-runtime/helpers/createClass.js")),l=m(t("../node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),s=m(t("../node_modules/babel-runtime/helpers/inherits.js")),r=m(t("../node_modules/react/index.js")),c=m(t("../node_modules/react-dom/index.js")),i=m(t("../node_modules/marked/lib/marked.js")),p=m(t("../node_modules/prismjs/prism.js")),u=m(t("./utils/markdown/canvas.jsx"));function m(e){return e&&e.__esModule?e:{default:e}}var g=function(e){function t(e){(0,o.default)(this,t);var n=(0,l.default)(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.components=new Map,n.renderer=new i.default.Renderer,n.renderer.table=function(e,n){return'<table class="grid"><thead>'+e+"</thead><tbody>"+n+"</tbody></table>"},n}return(0,s.default)(t,e),(0,a.default)(t,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"renderDOM",value:function(){var e=!0,n=!1,t=void 0;try{for(var o,a=this.components[Symbol.iterator]();!(e=(o=a.next()).done);e=!0){var l=o.value,s=(0,d.default)(l,2),r=s[0],i=s[1],u=document.getElementById(r);u instanceof HTMLElement&&c.default.render(i,u)}}catch(e){n=!0,t=e}finally{try{!e&&a.return&&a.return()}finally{if(n)throw t}}p.default.highlightAll()}},{key:"render",value:function(){var a=this,e=this.document(localStorage.getItem("KO_LANGUAGE")||"zh-CN");if("string"!=typeof e)return r.default.createElement("span",null);this.components.clear();var n=(0,i.default)(e.replace(/:::\s?demo\s?([^]+?):::/g,function(e,n,t){var o=t.toString(36);return a.components.set(o,r.default.createElement(u.default,Object.assign({name:a.constructor.name.toLowerCase()},a.props),n)),"<div id="+o+"></div>"}),{renderer:this.renderer});return r.default.createElement("div",{dangerouslySetInnerHTML:{__html:n}})}}]),t}(r.default.Component),v=g;n.default=v;"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(g,"Markdown","/Users/charlesyang/space/workspace/team/ko-react/preview/utils/markdown/index.jsx"),__REACT_HOT_LOADER__.register(v,"default","/Users/charlesyang/space/workspace/team/ko-react/preview/utils/markdown/index.jsx"))},0:function(e,n,t){e.exports=t("./index.js")}},[[0,4,5,1,3,2]]]);